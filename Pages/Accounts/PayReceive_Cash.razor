@page "/PayReceive_Cash"
@layout MainLayout_Accounts

@using AjaTech_Blazor.Data.ViewModels;
@using Microsoft.Extensions.Configuration;

@inject HttpClient httpClient
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@*--------------------------------------------------------------------------------------------------------------------------*@

<div class="container card-container">
    <div class="row">
        @*=========================================   Page Content Interface ===============================================*@

        @*------------------------------------------  إنشاء قيد دفع/قبض نقدي    ------------------------------------------*@
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row" style="direction:@languageContainer.Keys["Text_Direction"]">
                    @*----------------------------------------------------------------------------------------------------------------*@
                    <div class="col-lg-12 text-center font-weight-bold" style="border:#e8e11f 1px solid;background-color:#868218;color:white;margin-top:20px;font-size:x-large;border-radius:5px">@languageContainer.Keys["Create_PayReceive_Entry_Cash"]</div>
                    @*----------------------------------------------------------------------------------------------------------------*@

                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox @bind-Value="txtNxtHardCopyCode_Entry_CashCode" Placeholder='@languageContainer.Keys["Entry_Code"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>

                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDatePicker @bind-Value="The_date" TValue="DateTime" Format="dd/MM/yyyy" Placeholder='@languageContainer.Keys["Date"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfDatePicker>
                    </div>

                    <div class="radio-control col-lg-2">
                        <span class="row  font-weight-bold form-group">@languageContainer.Keys["Entry_Type"]</span>
                        <div class="row">
                            <SfRadioButton CssClass='pr-1 pl-1 font-weight-bold' Label="@languageContainer.Keys["Pay"]" Name="Type" @ref="rb_Pay"></SfRadioButton>
                            <SfRadioButton CssClass='pr-1 pl-1 font-weight-bold' Label="@languageContainer.Keys["Receive"]" Name="Type" @ref="rb_Receive" Checked="true"></SfRadioButton>
                        </div>
                    </div>

                    <div class="col-lg-2 font-weight-bold form-group pr-1 pl-1" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfNumericTextBox @bind-Value="seEntry_Cash_Value" TValue="decimal" Placeholder='@languageContainer.Keys["Value"]' Min="0" Max="1000000" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfNumericTextBox>
                    </div>

                    @*نوع التعاقد *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" ValueChanged="Changed_ContractType" @ref="cmbContractType" AllowFiltering="true" CssClass="pr-1 pl-1"
                                        DataSource="DataSource_ContractType" TValue="string"
                                        TItem="string" Placeholder='@languageContainer.Keys["Contract_Type"]'
                                        FloatLabelType="@FloatLabelType.Always">
                        </SfDropDownList>
                    </div>
                    @*كود التعاقد *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbContractCode" AllowFiltering="true" CssClass="pr-1 pl-1"
                                        DataSource="DataSource_ContractCode" TValue="string"
                                        TItem="string" Placeholder='@languageContainer.Keys["Contract_Code"]'
                                        FloatLabelType="@FloatLabelType.Always">
                        </SfDropDownList>
                    </div>

                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbBox" AllowFiltering="true" DataSource="DataSource_Box" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["Box"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>

                    <div class="col-lg-4 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbAccount" AllowFiltering="true" DataSource="DataSource_Account" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["account"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="HardCopyCode" Value="HardCopyCode"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>



                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox @ref="txtStatment" Placeholder='@languageContainer.Keys["Statement"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>


                    <div class="col-lg-2 font-weight-bold form-group" style="margin-top:auto">
                        <SfButton @onclick="btnAddRecord" Type="button" CssClass="e-btn e-normal e-success form-control font-weight-bold">@languageContainer.Keys["Save"]</SfButton>
                    </div>
                    @*---------------------------------------------------------------------------------------------------------------------------*@

                </div>
            </div>
        </div>
        @*------------------------------------------/ إنشاء قيد دفع/قبض نقدي    ------------------------------------------*@


        @*------------------------------------------  شبكة دفع/قبض نقدي    ------------------------------------------------*@
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["Monetary_Entry"]</div>
                    <SfGrid @ref="grdEntry_Cash" AllowSelection="true" EnableRtl="true" DataSource="DataSource_grdEntry_Cash" AllowResizing="true" Width="100%" AllowPaging="true" Toolbar="@(new string[] { "Search"})">
                        <GridColumns>
                            <GridColumn Field="@nameof(VM_Inv_GL.ID)" Visible="false" IsPrimaryKey="true" IsIdentity="true" DefaultValue="1" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.HardCopyCode)" AllowEditing="false" HeaderText="@languageContainer.Keys["Entry_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.The_Date)" EditType="EditType.DatePickerEdit" Format="dd/MM/yyyy" Type="ColumnType.DateTime" HeaderText="@languageContainer.Keys["Date"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.Type)" AllowEditing="false" HeaderText="@languageContainer.Keys["Entry_Type"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.Value)" HeaderText="@languageContainer.Keys["Value"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.Contract_Type)" HeaderText="@languageContainer.Keys["Contract_Type"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.Contract_Code)" HeaderText="@languageContainer.Keys["Contract_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.CreditAccount)" HeaderText="@languageContainer.Keys["Credit"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.DebitAccount)" HeaderText="@languageContainer.Keys["Debit"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field="@nameof(VM_Inv_GL.Custom_Statement)" HeaderText="@languageContainer.Keys["Statement"]" TextAlign="TextAlign.Center"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
        @*------------------------------------------  شبكة دفع/قبض نقدي    ------------------------------------------------*@

        @*========================================= / Page Content Interface ================================================*@
    </div>
</div>

@*============================================    Toast   ===================================================================*@
<SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed"
         TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger"
         Title="@languageContainer.Keys["Toast_Title_Failed"]"
         Content="@ToastContent">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
<SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success" Icon="e-success toast-icons" Title="@languageContainer.Keys["Toast_Title_Success"]" Content="@languageContainer.Keys["Toast_Content_Success"]">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
@*============================================  / Toast   ===================================================================*@


@*===========================================================================================================================*@
@*====================================================   Code  ==============================================================*@
@*===========================================================================================================================*@

@code {

    // المتغيرات
    #region

    string ToastContent, txtNxtHardCopyCode_Entry_CashCode, UserName;
    decimal seEntry_Cash_Value;
    DateTime The_date = DateTime.Now;

    SfGrid<VM_Inv_GL> grdEntry_Cash;
    SfToast Toast_Custom_Failed, Toast_Success;
    SfTextBox txtStatment;
    SfDropDownList<string, string> cmbAccount, cmbBox, cmbContractType, cmbContractCode;
    SfButton refbtnSave_Entry_Cash;
    SfRadioButton rb_Pay, rb_Receive;

    List<string> DataSource_Box, DataSource_Account , DataSource_ContractCode = new List<string>();
    List<string> DataSource_ContractType = new List<string>();
    List<VM_Inv_GL> DataSource_grdEntry_Cash = new List<VM_Inv_GL>();

    //Permissions Permissions_Obj = new Permissions();
    VM_Inv_GL vM_Inv_GL = new VM_Inv_GL();

    #endregion

    //تهيئة الصفحة
    protected override async Task OnInitializedAsync()
    {

        DataSource_Box = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select Title From Def_Accounts_api where Type='صندوق'&Required_Field=Title");
        DataSource_Account = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select Title From Def_Accounts_api where Type='مورد' Or Type='عميل'&Required_Field=Title");
        txtNxtHardCopyCode_Entry_CashCode = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetNextHardCopyCode?tbl=Inv_GL&Form=Inv_GL");
        DataSource_grdEntry_Cash = await httpClient.GetJsonAsync<List<VM_Inv_GL>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadTable?QueryString=select * From Inv_GL Where  Type = 'دفع' or Type='قبض' ");
        //DataSource_grdEntry_Cash.RemoveAll(a => a.Deleted_By != null);
        DataSource_grdEntry_Cash.RemoveAll(a => a.Deleted_By != "");

        DataSource_ContractType.Add("تركيبات");
        DataSource_ContractType.Add("صيانة");
    }
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions_Obj = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //UserName = Permissions_Obj.UserName;
        var user = (await AuthStat).User;
        UserName = user.Identity.Name;
    }

    //إضافة قيد
    protected async void btnAddRecord()
    {
        //---------- validating ---------------------

        if (seEntry_Cash_Value == 0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Value"] + languageContainer.Keys["Empty"];
            await this.Toast_Custom_Failed.Show();
            return;
        }

        if (string.IsNullOrWhiteSpace(cmbBox.Value))
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Box"] + languageContainer.Keys["Empty"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
        if (string.IsNullOrWhiteSpace(cmbAccount.Value))
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["account"] + languageContainer.Keys["Empty"];
            await this.Toast_Custom_Failed.Show();
            return;
        }


        // إضافة قيد

        vM_Inv_GL.The_User = UserName;
        vM_Inv_GL.Currency = "ريال سعودي";
        vM_Inv_GL.TimeStamp = DateTime.Now;
        vM_Inv_GL.The_Date = The_date;
        vM_Inv_GL.HardCopyCode = Convert.ToInt32(txtNxtHardCopyCode_Entry_CashCode);
        vM_Inv_GL.Value = seEntry_Cash_Value;
        vM_Inv_GL.Custom_Statement = txtStatment.Value;
        vM_Inv_GL.Contract_Type = cmbContractType.Value;
        vM_Inv_GL.Contract_Code = cmbContractCode.Value;
        vM_Inv_GL.ProccessID = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ProccessID");
        vM_Inv_GL.Document_ID = txtNxtHardCopyCode_Entry_CashCode;

        if (rb_Pay.Checked)
        {
            vM_Inv_GL.Type = "دفع";
            vM_Inv_GL.DebitAccount = cmbAccount.Value;
            vM_Inv_GL.CreditAccount = cmbBox.Value;
            vM_Inv_GL.Auto_Statement = " عملية دفع نقدي من : " + cmbBox.Value + " إلـي : " + cmbAccount.Value + " بـ قيمة : " + seEntry_Cash_Value + " ريال سعودي " + txtStatment.Value;
        }
        if (rb_Receive.Checked)
        {
            vM_Inv_GL.Type = "قبض";
            vM_Inv_GL.DebitAccount = cmbBox.Value;
            vM_Inv_GL.CreditAccount = cmbAccount.Value;
            vM_Inv_GL.Auto_Statement = " عملية دفع نقدي من : " + cmbAccount.Value + " إلـي : " + cmbBox.Value + "بـ قيمة  : " + seEntry_Cash_Value + " ريال سعودي " + txtStatment.Value;
        }

        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Inv_GL_api", vM_Inv_GL);
        await grdEntry_Cash.AddRecord(vM_Inv_GL);
        await this.Toast_Success.Show();

        The_date = DateTime.Now;

        cmbAccount.Clear();
        cmbBox.Clear();

        seEntry_Cash_Value = 0;
        txtStatment.Value = "";

        await OnInitializedAsync();
        StateHasChanged();

    }

    // جلب كود العملية
    protected async void Changed_ContractType()
    {
        if (cmbContractType.Text == "تركيبات")
        {
            this.DataSource_ContractCode = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select HardCopyCode From Inv_Contracts &Required_Field=HardCopyCode");
        }
        StateHasChanged();
    }

}
