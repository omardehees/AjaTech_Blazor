@page "/SupplyRecovery_Order"
@layout MainLayout_SupplyInstall

@using AjaTech_Blazor.Data.ViewModels;
@using Microsoft.Extensions.Configuration;

@inject HttpClient httpClient
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@*@inject Blazored.SessionStorage.ISessionStorageService sessionStorage*@
@*---------------------------------------------------------------------------------------------------------------------------*@

<div class="container card-container">
    <div class="row">

        @*--------------------------------------------------------  إنشاء إذن صرف واسترجاع -----------------------------------------------------*@
        @*-------------------------------------------------- ------------------------- --------------------------------------------------*@
        <div class="col-lg-12 text-center font-weight-bold" style="border:#e8e11f 1px solid;background-color:#868218;color:white;margin-top:20px;font-size:x-large;border-radius:5px">@languageContainer.Keys["Create_SupplyingRecovery_Order"]</div>

        @*-------------------------------------------------- Create Supplying Order  --------------------------------------------------*@
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row" style="direction:@languageContainer.Keys["Text_Direction"]">
                    @*---------------------------------------------------------------------------------------------------------------------------*@
                    @*كود الاذن*@
                    <div class="col-lg-1 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox @bind-Value="txtHardCopyCode_SupplyingOrder" Placeholder='@languageContainer.Keys["Code"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>
                    @*التاريخ *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDatePicker @ref="deOrderDate" Format="dd/MM/yyyy" Value="DateTime.Now" TValue="DateTime" Placeholder='@languageContainer.Keys["Date"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfDatePicker>
                    </div>
                    @*العميل *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbCustomer" AllowFiltering="true" DataSource="DataSource_Customers" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["Customer_Name"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*نوع التعاقد *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" ValueChanged="Changed_ContractType" @ref="cmbContractType" AllowFiltering="true" CssClass="pr-1 pl-1"
                                        DataSource="DataSource_ContractType" TValue="string"
                                        TItem="string" Placeholder='@languageContainer.Keys["Contract_Type"]'
                                        FloatLabelType="@FloatLabelType.Always">
                        </SfDropDownList>
                    </div>
                    @*كود التعاقد *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbContractCode" AllowFiltering="true" CssClass="pr-1 pl-1"
                                        DataSource="DataSource_ContractCode" TValue="string"
                                        TItem="string" Placeholder='@languageContainer.Keys["Contract_Code"]'
                                        FloatLabelType="@FloatLabelType.Always">
                        </SfDropDownList>
                    </div>
                    @*نوع الاذن *@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbOrderType" AllowFiltering="true" DataSource="DataSource_OrderType" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["OrderType"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*المخزن *@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbInventory" AllowFiltering="true" DataSource="DataSource_Inventory" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["inventory"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*مسئول الخزن *@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbInventory_Employee" AllowFiltering="true" DataSource="DataSource_Employees" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["Inventory_Employee"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*مسئول الموقع *@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" @ref="cmbBoss_Employee" AllowFiltering="true" DataSource="DataSource_Employees" TValue="string" CssClass="pr-1 pl-1"
                                        TItem="string" Placeholder='@languageContainer.Keys["Contract_Employee"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Title" Value="Title"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*المرحلة *@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox @ref="txtStage" Placeholder='@languageContainer.Keys["Stage"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>

                    @*قائمة المجموعات*@
                    <div class="col-lg-3 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" ValueChanged="GetItemsList" @ref="cmbGroup" AllowFiltering="true" DataSource="DataSource_Groups" TValue="string"
                                        CssClass="pr-1 pl-1" TItem="string" Placeholder='@languageContainer.Keys["Items_Item_Group"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="Item_Title_Ar" Value="Item_Title_Ar"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>
                    @*قائمة الأصناف*@
                    <div class="col-lg-4 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfDropDownList ShowClearButton="true" ValueChanged="GetItemsData" @ref="cmbItems" AllowFiltering="true" DataSource="DataSource_Items" TValue="string"
                                        CssClass="pr-1 pl-1" TItem="string" Placeholder='@languageContainer.Keys["Item"]' FloatLabelType="@FloatLabelType.Always">
                            <DropDownListFieldSettings Text="ElvTrack" Value="ElvTrack"></DropDownListFieldSettings>
                        </SfDropDownList>
                    </div>

                    @*الكمية*@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfNumericTextBox @ref="seItemQuantity" TValue="decimal" Placeholder='@languageContainer.Keys["Quantity"]' Min="0" Max="1000000" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfNumericTextBox>
                    </div>

                    @* بيان *@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox @ref="txtStatment" Placeholder='@languageContainer.Keys["Statement"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>
                    @*إضافة*@
                    <div class="col-lg-1 font-weight-bold form-group" style="margin-top:auto">
                        <SfButton @onclick="btnAddItem" @ref="refbtnAddItem" type="button" CssClass="e-btn e-normal e-info form-control font-weight-bold">@languageContainer.Keys["Add"]</SfButton>
                    </div>

                    @*كود الصنف*@
                    <div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Enabled="false" @ref="txtItemCode" Placeholder='@languageContainer.Keys["Item_Code"]' FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>
                    @*الكمية بالتعاقد *@
                    @*<div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Placeholder='@languageContainer.Keys["ContractingQuentity"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>*@
                    @*اجمالي التوريد *@
                    @*<div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Placeholder='@languageContainer.Keys["TotalSupplied"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>*@
                    @*اجمالي المسترد *@
                    @*<div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Placeholder='@languageContainer.Keys["TotalRecovery"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>*@
                    @*الكمية المتبقية للموقع *@
                    @*<div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Placeholder='@languageContainer.Keys["Remaining_Quantity"]' Enabled="false" FloatLabelType="@FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>*@
                    @*نسبة التوريد *@
                    @*<div class="col-lg-2 font-weight-bold form-group" style="text-align:@languageContainer.Keys["Style_Text_Align"]">
                        <SfTextBox Placeholder='@languageContainer.Keys["SupplyingPercent"]' Enabled="false" FloatLabelType="FloatLabelType.Always" CssClass='form-control'></SfTextBox>
                    </div>*@


                    @*---------------------------------------------------------------------------------------------------------------------------*@

                </div>
                </div>
        </div>
        @*=========================================  Content Page   ========================================================*@

        @*---------------------------------------------- تجميع الأصناف  ----------------------------------- -----------------*@

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["SupplyingRecovery_Items"]</div>
                    <SfGrid @ref="grdOrderItems" AllowSelection="true" EnableRtl="true" DataSource="DataSource_OrderItems" AllowResizing="true" Width="100%" AllowPaging="true" Toolbar="@(new string[] { "Search" , "Delete" })">
                        @*<GridEvents RowSelected="RowSelect_Contract" TValue="VM_Inv_Contracts"></GridEvents>*@
                        <GridEditSettings AllowAdding="true" AllowEditOnDblClick="true" ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowEditing="true" AllowDeleting="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog" ></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Item) HeaderText="@languageContainer.Keys["Item"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Quantity) HeaderText="@languageContainer.Keys["Quantity"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Statment) HeaderText="@languageContainer.Keys["Statement"]" TextAlign="TextAlign.Center"></GridColumn>
                            @*<GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Contract_Quantity) HeaderText="@languageContainer.Keys["ContractingQuentity"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Supplied_Quantity) HeaderText="@languageContainer.Keys["TotalSupplied"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Rebound_Quantity) HeaderText="@languageContainer.Keys["TotalRecovery"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Remaining_Quantity) HeaderText="@languageContainer.Keys["Remaining_Quantity"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_SupplyInstall_Items_Transfere_Details.Supply_Percentage) HeaderText="@languageContainer.Keys["SupplyingPercent"]" TextAlign="TextAlign.Center"></GridColumn>*@

                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        @*--------------------------------------------------  Buttons  ---------------------------------------------------*@
        <div class="col-lg-12 control-section form-group m-3">
            <div class="row">

                <div class="col-lg-4"></div>
                <SfButton OnClick="btn_SaveAllOrder" @ref="ref_btn_SaveAllOrder" CssClass="col-lg-4 e-btn e-normal e-success form-control font-weight-bold" type="button">@languageContainer.Keys["Save"]</SfButton>
                <div class="col-lg-4"></div>

            </div>
        </div>

        @*-----------------------------------------------------------------------------------------------------*@
    </div>
</div>

@*========================================= Toast Custom   Code ============================================================*@

<SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed"
         TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger"
         Title="@languageContainer.Keys["Toast_Title_Failed"]"
         Content="@ToastContent">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
@*========================================= / Toast  Success =================================================================*@

<SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success" Icon="e-success toast-icons" Title="@languageContainer.Keys["Toast_Title_Success"]" Content="@languageContainer.Keys["Toast_Content_Success"]">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
@*========================================= / Toast  Success ==================================================================*@

@*-----------------------------------------------------------------------------------------------------*@
@*-------------------------------------------------  Code  --------------------------------------------*@
@*----------------------------------------------------------------------cmbInventory-------------------------------*@

@code {

    // المتغيرات
    #region

    string ToastContent, txtHardCopyCode_SupplyingOrder, UserName;
    int? RowId_Selected = 0;

    SfGrid<VM_SupplyInstall_Items_Transfere_Details> grdOrderItems;
    SfToast Toast_Custom_Failed, Toast_Success;
    SfTextBox txtItemCode, txtStatment, txtStage;
    SfNumericTextBox<decimal> seItemQuantity;
    SfDatePicker<DateTime> deOrderDate;
    SfDropDownList<string, string> cmbCustomer, cmbInventory, cmbInventory_Employee, cmbBoss_Employee, cmbGroup, cmbItems , cmbOrderType, cmbContractCode, cmbContractType;
    List<string> DataSource_ContractType = new List<string>();
    List<string>  DataSource_ContractCode = new List<string>();
    SfButton ref_btn_SaveAllOrder, refbtnAddItem;


    List<VM_SupplyInstall_Items_Transfere_Details> DataSource_OrderItems = new List<VM_SupplyInstall_Items_Transfere_Details>();
    List<string>  DataSource_Customers, DataSource_Inventory, DataSource_Employees, DataSource_Items, DataSource_Groups, DataSource_OrderType = new List<string>();
    List<VM_SupplyInstall_Items_Transfere_Types> List_VM_SupplyInstall_Items_Transfere_Types = new List<VM_SupplyInstall_Items_Transfere_Types>();

    VM_SupplyInstall_Items_Transfere_Types vM_SupplyInstall_Items_Transfere_Types = new VM_SupplyInstall_Items_Transfere_Types();
    VM_SupplyInstall_Items_Transfere_Details vM_SupplyInstall_Items_Transfere_Details = new VM_SupplyInstall_Items_Transfere_Details();
    VM_SupplyInstall_Items_Transfere vM_SupplyInstall_Items_Transfere = new VM_SupplyInstall_Items_Transfere();
    //Permissions Permissions_Obj = new Permissions();
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }





    #endregion

    //تهيئة الصفحة
    protected override async Task OnInitializedAsync()
    {
        DataSource_OrderType = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select * From SupplyInstall_Items_Transfere_Types &Required_Field=Title");
        DataSource_Customers = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select Title From Def_Accounts_api where Type='عميل'&Required_Field=Title");
        DataSource_Inventory = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select Title From Def_Accounts_api where Type='مخزن'&Required_Field=Title");
        DataSource_Employees = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select * From Def_Employees_api &Required_Field=Name_Ar");
        DataSource_Groups = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select * From Def_Items_Groups_api &Required_Field=Title_Ar");
        // Get Next HardCopyCode 
        txtHardCopyCode_SupplyingOrder = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetNextHardCopyCode?tbl=SupplyInstall_Items_Transfere&Form=SupplyRecovery");

        DataSource_ContractType.Add("تركيبات");
        DataSource_ContractType.Add("صيانة");
        DataSource_ContractType.Add("ضمان");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions_Obj = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //UserName = Permissions_Obj.UserName;
        /////////////////////////////////////////
        //--Get User Data
        var user = (await AuthStat).User;
        UserName = user.Identity.Name;
        /////////////////////////////////////////
    }

    @*-جلب قائمة الصنف و الوصف*@
protected async void GetItemsList()
{
    @*await jsRuntime.InvokeAsync<string>("console.log", "cmbGroup.Text >> " + cmbGroup.Text);*@
    if (string.IsNullOrWhiteSpace(cmbGroup.Text) == false)
    {
        DataSource_Items = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select Item_Title_Ar From Def_Items_api Where Item_Group='" + cmbGroup.Text + "' Order By Item_Title_Ar&Required_Field=Item_Title_Ar");
        txtItemCode.Value = "";
        seItemQuantity.Value = 0;
        StateHasChanged();
    }
}

protected async void GetItemsData()
{
    if (string.IsNullOrWhiteSpace(cmbItems.Text) == false)
    {
        string _txtItemCode = await httpClient.GetStringAsync(Configuration.GetValue<string>
            ("Api") + "/api/Services/ReadField?QueryString=" + "select Item_Code from Def_Items_api where Item_Title_Ar = '" + cmbItems.Text + "'&Required_Field=Item_Code");
        txtItemCode.Value = _txtItemCode.Replace("\"", "");
        seItemQuantity.Value = 0;
        StateHasChanged();
    }
}

protected async void btnAddItem()
{
    //---------- validating ---------------------
    // لم يتم تحديد نوع التعاقد
    if (string.IsNullOrWhiteSpace(cmbContractType.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Contract_Type"]+languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد كود التعاقد
    if (string.IsNullOrWhiteSpace(cmbContractCode.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Contract_Code"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد الكود
    if (string.IsNullOrWhiteSpace(txtItemCode.Value))
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Missing_Code"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد الصنف
    if (string.IsNullOrWhiteSpace(cmbItems.Text))
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Missing_Item"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد الكمية
    if (seItemQuantity.Value == 0)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Missing_Quantity"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    //Does not accept dupplicated items
    foreach (var item in grdOrderItems.DataSource.ToList())
    {
        if (item.Item == cmbItems.Text)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Dupplicated_Item_Not_Allowed"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
    }

    // اضافة صنف

    vM_SupplyInstall_Items_Transfere_Details.ID = grdOrderItems.TotalItemCount + 1;
    vM_SupplyInstall_Items_Transfere_Details.Item = cmbItems.Text;
    vM_SupplyInstall_Items_Transfere_Details.Statment = txtStatment.Value;
    vM_SupplyInstall_Items_Transfere_Details.Quantity = seItemQuantity.Value;

    await grdOrderItems.AddRecord(vM_SupplyInstall_Items_Transfere_Details);
    //seItemQuantity.Dispose() ;
    txtStatment.Value = "";
    StateHasChanged();
}
// حفظ الاذن
protected async void btn_SaveAllOrder()
{
    // ---------------------   Validation  ----------------------
    // لم يتم تحديد العميل
    if (string.IsNullOrWhiteSpace(cmbCustomer.Text))
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Customer_Name"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد نوع التعاقد
    if (string.IsNullOrWhiteSpace(cmbContractType.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Contract_Type"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد كود التعاقد
    if (string.IsNullOrWhiteSpace(cmbContractCode.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Contract_Code"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد نوع الاذن
    if (string.IsNullOrWhiteSpace(cmbOrderType.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["OrderType"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد المخزن
    if (string.IsNullOrWhiteSpace(cmbInventory.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Inventory"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد  مسئول المخزن
    if (string.IsNullOrWhiteSpace(cmbInventory_Employee.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Inventory_Employee"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد  مسئول الموقع
    if (string.IsNullOrWhiteSpace(cmbBoss_Employee.Text) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Contract_Employee"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    // لم يتم تحديد  المرحلة
    if (string.IsNullOrWhiteSpace(txtStage.Value) == true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Stage"] + languageContainer.Keys["Empty"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    //الجدول فارغ 
    foreach (var item in grdOrderItems.DataSource.ToList())
    {
        if (grdOrderItems.TotalItemCount <=0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Grid_Is_Empty"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
    }
    // --------------------------------------------------------------------
    ref_btn_SaveAllOrder.Disabled = true;
    refbtnAddItem.Disabled = true;

    // حفظ البيانات
    vM_SupplyInstall_Items_Transfere.HardCopyCode = Convert.ToInt64(txtHardCopyCode_SupplyingOrder);
    vM_SupplyInstall_Items_Transfere.The_Date = deOrderDate.Value;
    vM_SupplyInstall_Items_Transfere.Customer = cmbCustomer.Value;
    vM_SupplyInstall_Items_Transfere.Contract_Type = cmbContractType.Value;
    vM_SupplyInstall_Items_Transfere.Contract_HardCopyCode = cmbContractCode.Value;
    vM_SupplyInstall_Items_Transfere.Job_Type = cmbOrderType.Value;
    vM_SupplyInstall_Items_Transfere.Inventory = cmbInventory.Value;
    vM_SupplyInstall_Items_Transfere.Inventory_Employee = cmbInventory_Employee.Value;
    vM_SupplyInstall_Items_Transfere.Boss_Employee = cmbBoss_Employee.Value;
    vM_SupplyInstall_Items_Transfere.Stage = txtStage.Value;
    vM_SupplyInstall_Items_Transfere.TimeStamp = DateTime.Now;
    vM_SupplyInstall_Items_Transfere.Issued_At = DateTime.Now;
    vM_SupplyInstall_Items_Transfere.Issued_By = UserName;

    await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/SupplyInstall_Items_Transfere", vM_SupplyInstall_Items_Transfere);



    //---------------------------------------------------------------------------------------------
    // حفظ الاصناف
    foreach (VM_SupplyInstall_Items_Transfere_Details item in grdOrderItems.DataSource.ToList())
    {
        vM_SupplyInstall_Items_Transfere_Details.HardCopyCode =Convert.ToInt64(txtHardCopyCode_SupplyingOrder);
        vM_SupplyInstall_Items_Transfere_Details.Item = item.Item;
        vM_SupplyInstall_Items_Transfere_Details.Quantity = item.Quantity;
        vM_SupplyInstall_Items_Transfere_Details.Contract_Quantity = item.Contract_Quantity;
        vM_SupplyInstall_Items_Transfere_Details.Supplied_Quantity = item.Supplied_Quantity;
        vM_SupplyInstall_Items_Transfere_Details.Rebound_Quantity = item.Rebound_Quantity;
        vM_SupplyInstall_Items_Transfere_Details.Remaining_Quantity = item.Remaining_Quantity;
        vM_SupplyInstall_Items_Transfere_Details.Supply_Percentage = item.Supply_Percentage;
        vM_SupplyInstall_Items_Transfere_Details.Statment = item.Statment;

        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/SupplyInstall_Items_Transfere_Details", vM_SupplyInstall_Items_Transfere_Details);
    }
    //---------------------------------------------------------------------------------------------
    await this.Toast_Success.Show();


}


// تحديد الصف
public async void RowSelect_Contract(RowSelectEventArgs<VM_Inv_Contracts> Args)
{
    RowId_Selected = Args.Data.HardCopyCode;
    StateHasChanged();
}

// زر طباعة
public async void btn_Print()
{

}
// كود العملية
protected async void Changed_ContractType()
{
    if (cmbContractType.Text == "تركيبات")
    {
        this. DataSource_ContractCode= await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select HardCopyCode From Inv_Contracts &Required_Field=HardCopyCode");
    }
    else
    {
        this.cmbContractCode.Enabled = false;
    }
    StateHasChanged();

}






}
