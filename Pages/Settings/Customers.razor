@page "/Customers"
@layout MainLayout_Settings

@using AjaTech_Blazor.Data.ViewModels;
@using System.Threading.Tasks;
@using Microsoft.Extensions.Configuration;
@using AjaTech_Blazor.Data.IServices;

@inject HttpClient httpClient;
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@*@inject Blazored.SessionStorage.ISessionStorageService sessionStorage*@
@inject IFileUpload fileupload

<div class="container card-container p-1">
    <div class="row">

        @*=========================================   Grid     ========================================================*@
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#7575ff;margin-top:20px;font-size:x-large;border-radius:5px">@languageContainer.Keys["Customers"]</div>
                    <SfGrid ID="grdCusomers" EnableRtl="true" AllowFiltering="true" DataSource="@DataSource_Customers" Width="100%" ShowColumnChooser="true" AllowPaging="true" AllowResizing="true" AllowReordering="true" AllowRowDragAndDrop="true" Toolbar="@(new List<object>() { "Add", "Edit", "Delete", "Print", "ColumnChooser", "Search" })">
                        <GridFilterSettings Type="Syncfusion.Blazor.Grids.FilterType.Excel"></GridFilterSettings>
                        @*<GridEvents @*Created="CreatedHundler" OnActionComplete="FilterdData" RowSelected="RowSelecthandler" OnActionBegin="ActionBegin_Customers" OnToolbarClick="ToolbarClick"  TValue="VM_Def_Accounts"></GridEvents>*@
                        <GridEvents OnActionBegin="ActionBegin_Customers" TValue="VM_Def_Accounts"></GridEvents>
                        <GridEditSettings AllowAdding="true" AllowEditOnDblClick="true" ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowEditing="true" AllowDeleting="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Def_Accounts.ID) IsIdentity="true" HeaderText="ID" IsPrimaryKey="true" ValidationRules="@(new { required = true, number = true })" TextAlign="TextAlign.Center" Width="100"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Title) HeaderText="@languageContainer.Keys["Customer_Name"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Tax_Number) HeaderText="@languageContainer.Keys["Tax_Number"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Type) AllowEditing="false" HeaderText="@languageContainer.Keys["Type"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Activity) HeaderText="@languageContainer.Keys["Def_Activity"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.ParentAccount) AllowEditing="false" HeaderText="@languageContainer.Keys["Items_Groups_Parents"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.ParentID) AllowEditing="false" HeaderText="@languageContainer.Keys["Parent_Code"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.First_Debit) HeaderText="@languageContainer.Keys["First_Debit"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.First_Credit) HeaderText="@languageContainer.Keys["First_Credit"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Debit) HeaderText="@languageContainer.Keys["Debit"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Credit) HeaderText="@languageContainer.Keys["Credit"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Balance) HeaderText="@languageContainer.Keys["Balance"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.CurrencyID) HeaderText="@languageContainer.Keys["Currency"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Income_Statement) HeaderText="@languageContainer.Keys["Statement"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Financial_Center) HeaderText="@languageContainer.Keys["Financial_Center"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.The_Level) HeaderText="@languageContainer.Keys["Level"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Users) HeaderText="@languageContainer.Keys["Users"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Sales_Representative) HeaderText="@languageContainer.Keys["Sales_Representative"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Enabled) HeaderText="@languageContainer.Keys["Def_Enabled"]" DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Diasbled_By) HeaderText="@languageContainer.Keys["Diasbled_By"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Disabled_At) HeaderText="@languageContainer.Keys["Disabled_At"]" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.String" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Deleted_By) HeaderText="@languageContainer.Keys["Deleted_By"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Deleted_At) HeaderText="@languageContainer.Keys["Deleted_At"]" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.String" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Rating) HeaderText="@languageContainer.Keys["Rating"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Image) HeaderText="@languageContainer.Keys["Def_Image"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.RegDate) HeaderText="@languageContainer.Keys["RegDate"]" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.The_Group) HeaderText="@languageContainer.Keys["Items_Item_Group"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Dealing_Worning) HeaderText="@languageContainer.Keys["Dealing_Worning"]" DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Allow_Discount) HeaderText="@languageContainer.Keys["Allow_Discount"]" DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Allow_Term_Selling) HeaderText="@languageContainer.Keys["Allow_Term_Selling"]" DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Debit_Limit) HeaderText="@languageContainer.Keys["Debit_Limit"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Pricing_Policy) HeaderText="@languageContainer.Keys["Pricing_Policy"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.language) HeaderText="@languageContainer.Keys["language"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Religion) HeaderText="@languageContainer.Keys["Religion"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.National_ID) HeaderText="@languageContainer.Keys["Nationality"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Country) HeaderText="@languageContainer.Keys["Country"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.City) HeaderText="@languageContainer.Keys["City"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.address) HeaderText="@languageContainer.Keys["address"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.MailBox) HeaderText="@languageContainer.Keys["MailBox"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.LandLines) HeaderText="@languageContainer.Keys["LandLines"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Phones) HeaderText="@languageContainer.Keys["Phones"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.EMail) HeaderText="@languageContainer.Keys["EMail"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.FaceBook) HeaderText="@languageContainer.Keys["FaceBook"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.WhatsApp) HeaderText="@languageContainer.Keys["WhatsApp"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Contact_From) HeaderText="@languageContainer.Keys["Contact_From"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Contact_To) HeaderText="@languageContainer.Keys["Contact_To"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Sex) HeaderText="@languageContainer.Keys["Sex"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Social_Status) HeaderText="@languageContainer.Keys["Social_Status"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Car_ID) HeaderText="@languageContainer.Keys["Car_ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Job) HeaderText="@languageContainer.Keys["Job"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Qualification) HeaderText="@languageContainer.Keys["Qualification"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Location) HeaderText="@languageContainer.Keys["Qualification"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Def_Accounts.Notes) HeaderText="@languageContainer.Keys["Notes"]" TextAlign="TextAlign.Center"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
        @*========================================= /  Grid     ========================================================*@

        @*========================================= /  Toast  Code ========================================================*@
        <SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success" Icon="e-success toast-icons" Title="@languageContainer.Keys["Toast_Title_Success"]" Content="@languageContainer.Keys["Toast_Content_Success"]">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*---------------------------------------------------------------------------------------------------------------*@
        <SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed" Content="@ToastContent" TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger" Title="@languageContainer.Keys["Toast_Title_Failed"]">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*=========================================  Toast Permission ========================================================*@

    </div>
</div>

@code {
    #region Variables

    SfGrid<VM_Def_Accounts> grdCusomers;
    SfToast Toast_Success;
    SfToast Toast_Custom_Failed;

    string User_Name;
    //string System_Language;
    string MyAccounts;
    string ToastContent;
    string Check_User_Super_Admin;
    string MyAccounts_Have_Credit_GL;
    string MyAccounts_Have_Debit_GL;
    string Max_Id;

    //Permissions Permissions_Obj = new Permissions();
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    VM_Def_Accounts VM_Def_Accounts_Obj1 = new VM_Def_Accounts();
    VM_Def_Accounts VM_Def_Accounts_Obj2 = new VM_Def_Accounts();

    private List<VM_Def_Accounts> DataSource_Customers = new List<VM_Def_Accounts>();

    #endregion

    protected override async Task OnInitializedAsync()
    {
        //if (System_Language == "ltr")
        //{
        //    grdCusomers.EnableRtl = false;
        //}

        // Get Accounts_api
        DataSource_Customers = await httpClient.GetJsonAsync<List<VM_Def_Accounts>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadTable?QueryString=select * From Def_Accounts_Api Where Type = 'عميل'");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions_Obj = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //User_Name = Permissions_Obj.UserName;
        //System_Language = Permissions_Obj.Language;
        /////////////////////////////////////////
        //-- Get User Data
        var user = (await AuthStat).User;
        User_Name = user.Identity.Name;
        /////////////////////////////////////////


        //await jsRuntime.InvokeAsync<string>("console.log", "System_Language  >> " + System_Language);
        //Check_User_Super_Admin
        Check_User_Super_Admin = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadField?QueryString=" + "select* from Tbl_def_Users_y where User_Name = '" + User_Name + "'&Required_Field=IS_Super_User");
        Check_User_Super_Admin = Check_User_Super_Admin.Replace("\"", "");

        Max_Id = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetMaxId?QueryString=Select Max (ID)  From Def_Accounts_Api Where Type = 'عميل'");
        Max_Id = Max_Id.Replace("\"", "");

    }

    public async void ActionBegin_Customers(ActionEventArgs<VM_Def_Accounts> args)
    {
        MyAccounts = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select * From Def_Accounts_Api Where Type = 'عميل'&Required_Field=Title");
        MyAccounts_Have_Credit_GL = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select * From Inv_GL &Required_Field=CreditAccount");
        MyAccounts_Have_Debit_GL = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select * From Inv_GL &Required_Field=DebitAccount");

        // Delete Api

        if (args.RequestType.ToString() == "Delete")
        {
            // Prevent Delete If This Element was used

            if (MyAccounts_Have_Credit_GL.IndexOf(args.Data.Title) != -1)
            {
                this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Content_Delete_Failed"];
                await this.Toast_Custom_Failed.Show();
                return;
            }
            if (MyAccounts_Have_Debit_GL.IndexOf(args.Data.Title) != -1)
            {
                this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Content_Delete_Failed"];
                await this.Toast_Custom_Failed.Show();
                return;
            }
            // Prevent Delete If User Hasn't Permission
            else if (Check_User_Super_Admin == "False")
            {
                this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Content_Permission_Failed"];
                await this.Toast_Custom_Failed.Show();
                return;
            }
            // Prevent Delete If ID = 0 (It's Means That Id Didn't take His Place In DataBase)
            else if (args.Data.ID == 0)
            {
                this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_Reload"];
                await this.Toast_Custom_Failed.Show();
                return;
            }
            else
            {
                await httpClient.DeleteAsync(Configuration.GetValue<string>("Api") + "/api/Accounts_api/" + args.Data.ID);
                await this.Toast_Success.Show();
            }
        }
        // (add) Post Api

        else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
        {
            if (args.Action == "add")
            {
                VM_Def_Accounts_Obj1.ID = int.Parse(Max_Id) + 1;
                VM_Def_Accounts_Obj1.Type = "عميل";
                VM_Def_Accounts_Obj1.Activity = args.Data.Activity;
                VM_Def_Accounts_Obj1.ParentAccount = "العملاء";
                VM_Def_Accounts_Obj1.ParentID = 1601;
                VM_Def_Accounts_Obj1.Title = args.Data.Title;
                VM_Def_Accounts_Obj1.First_Debit = args.Data.First_Debit;
                VM_Def_Accounts_Obj1.First_Credit = args.Data.First_Credit;
                VM_Def_Accounts_Obj1.Debit = args.Data.Debit;
                VM_Def_Accounts_Obj1.Credit = args.Data.Credit;
                VM_Def_Accounts_Obj1.Balance = args.Data.Balance;
                VM_Def_Accounts_Obj1.CurrencyID = args.Data.CurrencyID;
                VM_Def_Accounts_Obj1.Income_Statement = args.Data.Income_Statement;
                VM_Def_Accounts_Obj1.Financial_Center = args.Data.Financial_Center;
                VM_Def_Accounts_Obj1.The_Level = args.Data.The_Level;
                VM_Def_Accounts_Obj1.Users = args.Data.Users;
                VM_Def_Accounts_Obj1.Sales_Representative = args.Data.Sales_Representative;
                VM_Def_Accounts_Obj1.Enabled = args.Data.Enabled;
                VM_Def_Accounts_Obj1.Diasbled_By = args.Data.Diasbled_By;
                VM_Def_Accounts_Obj1.Disabled_At = args.Data.Disabled_At;
                VM_Def_Accounts_Obj1.Deleted_By = args.Data.Deleted_By;
                VM_Def_Accounts_Obj1.Deleted_At = args.Data.Deleted_At;
                VM_Def_Accounts_Obj1.Rating = args.Data.Rating;
                VM_Def_Accounts_Obj1.Image = args.Data.Image;
                VM_Def_Accounts_Obj1.RegDate = args.Data.RegDate;
                VM_Def_Accounts_Obj1.The_Group = args.Data.The_Group;
                VM_Def_Accounts_Obj1.Dealing_Worning = args.Data.Dealing_Worning;
                VM_Def_Accounts_Obj1.Allow_Discount = args.Data.Allow_Discount;
                VM_Def_Accounts_Obj1.Allow_Term_Selling = args.Data.Allow_Term_Selling;
                VM_Def_Accounts_Obj1.Debit_Limit = args.Data.Debit_Limit;
                VM_Def_Accounts_Obj1.Pricing_Policy = args.Data.Pricing_Policy;
                VM_Def_Accounts_Obj1.language = args.Data.language;
                VM_Def_Accounts_Obj1.Religion = args.Data.Religion;
                VM_Def_Accounts_Obj1.National_ID = args.Data.National_ID;
                VM_Def_Accounts_Obj1.Country = args.Data.Country;
                VM_Def_Accounts_Obj1.City = args.Data.City;
                VM_Def_Accounts_Obj1.address = args.Data.address;
                VM_Def_Accounts_Obj1.MailBox = args.Data.MailBox;
                VM_Def_Accounts_Obj1.LandLines = args.Data.LandLines;
                VM_Def_Accounts_Obj1.Phones = args.Data.Phones;
                VM_Def_Accounts_Obj1.EMail = args.Data.EMail;
                VM_Def_Accounts_Obj1.FaceBook = args.Data.FaceBook;
                VM_Def_Accounts_Obj1.WhatsApp = args.Data.WhatsApp;
                VM_Def_Accounts_Obj1.Contact_From = args.Data.Contact_From;
                VM_Def_Accounts_Obj1.Contact_To = args.Data.Contact_To;
                VM_Def_Accounts_Obj1.Sex = args.Data.Sex;
                VM_Def_Accounts_Obj1.Social_Status = args.Data.Social_Status;
                VM_Def_Accounts_Obj1.Car_ID = args.Data.Car_ID;
                VM_Def_Accounts_Obj1.Job = args.Data.Job;
                VM_Def_Accounts_Obj1.Qualification = args.Data.Qualification;
                VM_Def_Accounts_Obj1.Tax_Number = args.Data.Tax_Number;
                VM_Def_Accounts_Obj1.Location = args.Data.Location;
                VM_Def_Accounts_Obj1.Notes = args.Data.Notes;

                string Certificates_Title_Ar = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select* from Def_Items_Certificates_api&Required_Field=Title_Ar");
                string Certificates_Title_En = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=" + "select* from Def_Items_Certificates_api&Required_Field=Title_En");
                // Prevent Adding Because This Element is repeat
                if (MyAccounts.IndexOf(args.Data.Title) != -1)
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Content_Add_Failed"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                else
                {
                    await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Accounts_api", VM_Def_Accounts_Obj1);
                    await this.Toast_Success.Show();
                }
            }

            // (Edit) Put Api Employees

            else
            {
                VM_Def_Accounts_Obj2.ID = args.Data.ID;
                VM_Def_Accounts_Obj2.Type = args.Data.Type;
                VM_Def_Accounts_Obj2.Activity = args.Data.Activity;
                VM_Def_Accounts_Obj2.ParentAccount = args.Data.ParentAccount;
                VM_Def_Accounts_Obj2.ParentID = args.Data.ParentID;
                VM_Def_Accounts_Obj2.Title = args.Data.Title;
                VM_Def_Accounts_Obj2.First_Debit = args.Data.First_Debit;
                VM_Def_Accounts_Obj2.First_Credit = args.Data.First_Credit;
                VM_Def_Accounts_Obj2.Debit = args.Data.Debit;
                VM_Def_Accounts_Obj2.Credit = args.Data.Credit;
                VM_Def_Accounts_Obj2.Balance = args.Data.Balance;
                VM_Def_Accounts_Obj2.CurrencyID = args.Data.CurrencyID;
                VM_Def_Accounts_Obj2.Income_Statement = args.Data.Income_Statement;
                VM_Def_Accounts_Obj2.Financial_Center = args.Data.Financial_Center;
                VM_Def_Accounts_Obj2.The_Level = args.Data.The_Level;
                VM_Def_Accounts_Obj2.Users = args.Data.Users;
                VM_Def_Accounts_Obj2.Sales_Representative = args.Data.Sales_Representative;
                VM_Def_Accounts_Obj2.Enabled = args.Data.Enabled;
                VM_Def_Accounts_Obj2.Diasbled_By = args.Data.Diasbled_By;
                VM_Def_Accounts_Obj2.Disabled_At = args.Data.Disabled_At;
                VM_Def_Accounts_Obj2.Deleted_By = args.Data.Deleted_By;
                VM_Def_Accounts_Obj2.Deleted_At = args.Data.Deleted_At;
                VM_Def_Accounts_Obj2.Rating = args.Data.Rating;
                VM_Def_Accounts_Obj2.Image = args.Data.Image;
                VM_Def_Accounts_Obj2.RegDate = args.Data.RegDate;
                VM_Def_Accounts_Obj2.The_Group = args.Data.The_Group;
                VM_Def_Accounts_Obj2.Dealing_Worning = args.Data.Dealing_Worning;
                VM_Def_Accounts_Obj2.Allow_Discount = args.Data.Allow_Discount;
                VM_Def_Accounts_Obj2.Allow_Term_Selling = args.Data.Allow_Term_Selling;
                VM_Def_Accounts_Obj2.Debit_Limit = args.Data.Debit_Limit;
                VM_Def_Accounts_Obj2.Pricing_Policy = args.Data.Pricing_Policy;
                VM_Def_Accounts_Obj2.language = args.Data.language;
                VM_Def_Accounts_Obj2.Religion = args.Data.Religion;
                VM_Def_Accounts_Obj2.National_ID = args.Data.National_ID;
                VM_Def_Accounts_Obj2.Country = args.Data.Country;
                VM_Def_Accounts_Obj2.City = args.Data.City;
                VM_Def_Accounts_Obj2.address = args.Data.address;
                VM_Def_Accounts_Obj2.MailBox = args.Data.MailBox;
                VM_Def_Accounts_Obj2.LandLines = args.Data.LandLines;
                VM_Def_Accounts_Obj2.Phones = args.Data.Phones;
                VM_Def_Accounts_Obj2.EMail = args.Data.EMail;
                VM_Def_Accounts_Obj2.FaceBook = args.Data.FaceBook;
                VM_Def_Accounts_Obj2.WhatsApp = args.Data.WhatsApp;
                VM_Def_Accounts_Obj2.Contact_From = args.Data.Contact_From;
                VM_Def_Accounts_Obj2.Contact_To = args.Data.Contact_To;
                VM_Def_Accounts_Obj2.Sex = args.Data.Sex;
                VM_Def_Accounts_Obj2.Social_Status = args.Data.Social_Status;
                VM_Def_Accounts_Obj2.Car_ID = args.Data.Car_ID;
                VM_Def_Accounts_Obj2.Job = args.Data.Job;
                VM_Def_Accounts_Obj2.Qualification = args.Data.Qualification;
                VM_Def_Accounts_Obj2.Tax_Number = args.Data.Tax_Number;
                VM_Def_Accounts_Obj2.Location = args.Data.Location;
                VM_Def_Accounts_Obj2.Notes = args.Data.Notes;

                // Prevent Update Because This User Hasn't Permission
                if (Check_User_Super_Admin == "False")
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Content_Permission_Failed"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                else
                {
                    await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Accounts_api?id=" + args.Data.ID.ToString(), VM_Def_Accounts_Obj2);
                    await this.Toast_Success.Show();
                }
            }
        }
    }


}
