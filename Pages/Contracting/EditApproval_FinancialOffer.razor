@page "/EditApproval_FinancialOffer"
@layout MainLayout_Contracting

@using AjaTech_Blazor.Data.ViewModels;
@using Microsoft.Extensions.Configuration;

@inject HttpClient httpClient
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@*@inject Blazored.SessionStorage.ISessionStorageService sessionStorage*@
@*---------------------------------------------------------------------------------------------------------------------------*@
@*--------------------------------------------------  Page Container --------------------------------------------------*@
<div class="container card-container">
    <div class="row">

        @*---------------------------------------------------------------------------------------------------------------------------*@
        @*--------------------------------------------------  Page Header --------------------------------------------------*@
        <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#868218;color:white;margin-top:20px;font-size:x-large;border-radius:5px">@languageContainer.Keys["EditApproval_FinancialOffer"]</div>

        @*---------------------------------------------------------------------------------------------------------------------------*@

        @*=========================================  Content Page   ========================================================*@

        @*---------------------------------------------- شبكة العروض المالية    ----------------------------------- -----------------*@

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["FinancialOffers"]</div>
                    <SfGrid @ref="grdFinancialOffers" AllowSelection="true" EnableRtl="true" DataSource="DataSource_FinancialOffers" AllowResizing="true" Width="100%" AllowPaging="true" Toolbar="@(new string[] { "Search", "Edit" })">
                        <GridEvents RowSelected="RowSelect_TechnicalOffers" OnActionBegin="ActionBegin_FinancialOffers" QueryCellInfo="CellColor_FinancialOffers" TValue="VM_Inv_Pre_Sales_Financial_Offer"></GridEvents>
                        <GridEditSettings AllowAdding="true" AllowEditOnDblClick="true" ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowEditing="true" AllowDeleting="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog" Dialog="DialogParams"></GridEditSettings>
                        <GridSelectionSettings Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></GridSelectionSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" DefaultValue="1" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.HardCopyCode) AllowEditing="false" HeaderText="@languageContainer.Keys["FinancialOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Technical_Offer_HardCopyCode) AllowEditing="false" HeaderText="@languageContainer.Keys["TechnicalOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Customer) HeaderText="@languageContainer.Keys["Customer_Name"]" TextAlign="TextAlign.Center">
                                <EditTemplate>
                                    <SfDropDownList ShowClearButton="true" FloatLabelType="@FloatLabelType.Always" AllowFiltering="true" ID="Customer" Placeholder="@languageContainer.Keys["Customer_Name"]" Value="@((context as VM_Inv_Pre_Sales_Financial_Offer).Customer)" DataSource="@DataSource_Customers">
                                        <DropDownListFieldSettings Text="Customer" Value="Customer"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </EditTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Garantee_Included) DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" HeaderText="@languageContainer.Keys["GranteeIncluded"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Garantee_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Garantee_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Garantee_Month) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Garantee_Month"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Maintenance_Visits_Included) DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" HeaderText="@languageContainer.Keys["Maintanance_Visit_Includedncluded"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Maintenance_Visits_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Maintanance_Visit_Included_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Maintenance_Visits_Month) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Maintanance_Visit_Included_Month"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Shipping_Charges) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Shipping_Chargest"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Lefting_Charges) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Lefting_Charges"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Transportation_Charges) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Transportation_Charges"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Preparation_Charges) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Preparation_Charges"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Subcontractor_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Subcontractor_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Subcontractor_Statement) HeaderText="@languageContainer.Keys["Subcontractor_Statment"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Other_Charges) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["OtherCharges_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Other_Charges_Statement) HeaderText="@languageContainer.Keys["OtherCharges_Statment"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Technical_Offer_Total) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Component_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Extra_Cost) HeaderText="@languageContainer.Keys["Extra_Cost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Profit_Value) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Profit"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Total_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["TotalCost"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Vat) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Items_Vat"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Contract_Total) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Total_Contracting"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Valid_To) EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["validTo"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.Notes) HeaderText="@languageContainer.Keys["Notes"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer.LegalTerms_Items) HeaderText="@languageContainer.Keys["LegalTerms_Contracting"]" TextAlign="TextAlign.Center">
                                <EditTemplate>
                                    <SfTextBox Multiline="true" EnableRtl="true" ShowClearButton="true" FloatLabelType="FloatLabelType.Always" Placeholder="@languageContainer.Keys["LegalTerms_Contracting"]" ID="LegalTerms_Items" CssClass="grid-font"
                                               Value="@((context as VM_Inv_Pre_Sales_Financial_Offer).LegalTerms_Items)" />
                                </EditTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Issuied_By) AllowEditing="false" HeaderText="@languageContainer.Keys["Issuance_By"]" TextAlign="TextAlign.Center" Width="110"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Issuied_At) AllowEditing="false"  EditType="EditType.DatePickerEdit" Format="dd/MM/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["Issuance_Date"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Approved_By) AllowEditing="false" HeaderText="@languageContainer.Keys["Approval"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Approved_At) AllowEditing="false" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["Approval_Date"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>


                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        @*--------------------------------------------------  Buttons  ---------------------------------------------------*@
        <div class="col-lg-12 control-section form-group m-3">
            <div class="row">
                @* زر طباعة العرض *@
                <SfButton OnClick="Print_Offer" CssClass="col-lg-3 e-btn font-weight-bold e-normal e-primary" IconCss="e-icons e-print-icon">. @languageContainer.Keys["Print"]</SfButton>
                <div class="col-lg-1"></div>
                @* زر التعاقد *@
                <SfButton @ref="ref_btn_Contracting" OnClick="btn_Contracting" CssClass="col-lg-3 e-btn e-normal badge-secondary form-control font-weight-bold" type="button">@languageContainer.Keys["Contracting"]</SfButton>
                <div class="col-lg-1"></div>
                @* زر اعتماد العرض *@
                <SfButton @onclick="btn_Success_Approval" CssClass="col-lg-3 e-btn e-normal e-success form-control font-weight-bold" type="button">@languageContainer.Keys["Approval"]</SfButton>

            </div>
        </div>

        @*-----------------------------------------------------------------------------------------------------*@

        @*-------------------------------------------------- شبكة الدُفعات والاقساط --------------------------------- -----------------*@
        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:#808080 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["PaymentsAndInstallments_FinancialOffer"]</div>
                    <SfGrid @ref="grdPayments" EnableRtl="true" DataSource="DataSource_grdPayments" AllowResizing="true" AllowSelection="true" Width="100%" AllowPaging="true" Toolbar="@(new string[] {"Search" ,"Add","Edit","Delete"})">
                        <GridEvents OnActionBegin="ActionBegin_Payments" TValue="VM_Inv_Pre_Sales_Financial_Offer_Payments"></GridEvents>
                        <GridEditSettings ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowAdding="true" AllowDeleting="true" AllowEditing="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog"></GridEditSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" HeaderText="@languageContainer.Keys["Item"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Financial_Offer_HardCopyCode) Visible="true" AllowEditing="false" HeaderText="@languageContainer.Keys["FinancialOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Customer) Visible="false" AllowEditing="false" HeaderText="@languageContainer.Keys["Customer_Name"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Required) Visible="false" AllowEditing="false" HeaderText="@languageContainer.Keys["Required"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Value) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Value"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Statment) HeaderText="@languageContainer.Keys["Statement"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Done_Date) Visible="false" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["DoneDate"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Required_Date) EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["RequireDate"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Financial_Offer_Payments.Notes) Visible="false" HeaderText="@languageContainer.Keys["Notes"]" TextAlign="TextAlign.Center"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>
        @*-----------------------------------------------------------------------------------------------------*@

        @*========================================= / Content Page   ========================================================*@

        @*========================================= Toast Custom  ============================================================*@
        <SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed"
                 TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger"
                 Title="@languageContainer.Keys["Toast_Title_Failed"]"
                 Content="@ToastContent">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*========================================= / Toast Custom  =============================================================*@
        @*========================================= / Toast  Success =================================================================*@
        <SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success" Icon="e-success toast-icons" Title="@languageContainer.Keys["Toast_Title_Success"]" Content="@languageContainer.Keys["Toast_Content_Success"]">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*========================================= / Toast  Success ==================================================================*@

    </div>
</div>

@*-----------------------------------------------------------------------------------------------------*@
@*--------------------------------------------  Code --------------------------------------------------*@
@*-----------------------------------------------------------------------------------------------------*@


@code {
    //المتغيرات
    #region Global Variable

    string[] LightGreen = { "color: #0b7924f0;font-weight:Bold" };
    string ToastContent, MyContracts;
    string Url_Parm_Offer, User_Name, FullName, User_Job, Customer_Name, Row_Approved_By, QueryString, Get_Contract_HardCopyCode, Technical_HardCopyCode;
    long? RowId_FinancialOffer = 0;
    decimal? ContractCost;
    decimal? ElevatorCost;
    bool? Garantee_Included, Maintenance_Included;
    int? Maintenance_Month, Garantee_Month;
    int Max_Acc;
    DateTime TimeSatmp = DateTime.Now;
    decimal? ContractVat ,Extra_Cost, Profit,Compnents_Cost;
    string ContractNote;
    string ProductName;
    string Max_Account_ID;

    SfGrid<VM_Inv_Pre_Sales_Financial_Offer> grdFinancialOffers;
    SfGrid<VM_Inv_Pre_Sales_Financial_Offer_Payments> grdPayments;
    SfButton ref_btn_Approve, ref_btn_Archive, ref_btn_Contracting;
    SfToast Toast_Success, Toast_Custom_Failed;

    List<VM_Inv_Pre_Sales_Financial_Offer> DataSource_FinancialOffers = new List<VM_Inv_Pre_Sales_Financial_Offer>();
    List<VM_Inv_Pre_Sales_Financial_Offer_Payments> DataSource_grdPayments = new List<VM_Inv_Pre_Sales_Financial_Offer_Payments>();
    List<string> DataSource_Customers = new List<string>();

    VM_Inv_Pre_Sales_Financial_Offer_Payments vM_Inv_Pre_Sales_Financial_Offer_Payments_1 = new VM_Inv_Pre_Sales_Financial_Offer_Payments();
    VM_Inv_Pre_Sales_Financial_Offer_Payments vM_Inv_Pre_Sales_Financial_Offer_Payments_2 = new VM_Inv_Pre_Sales_Financial_Offer_Payments();
    VM_Inv_Pre_Sales_Financial_Offer vM_Inv_Pre_Sales_Financial_Offer_1 = new VM_Inv_Pre_Sales_Financial_Offer();
    VM_Inv_Contracts vM_Inv_Contracts = new VM_Inv_Contracts();
    VM_Inv_GL vM_Inv_GL = new VM_Inv_GL();
    VM_Inv_GL vM_Inv_GL2 = new VM_Inv_GL();
    VM_Def_Items VM_Def_Items_Object = new VM_Def_Items();
    VM_Def_Accounts vM_Def_Accounts = new VM_Def_Accounts();

    //Permissions Permissions = new Permissions();

    #endregion

    //تهيئة الصفحة
    protected override async Task OnInitializedAsync()
    {
        DataSource_FinancialOffers = await httpClient.GetJsonAsync<List<VM_Inv_Pre_Sales_Financial_Offer>>(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Financial_Offer");
        Get_Contract_HardCopyCode = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetNextHardCopyCode?tbl=Inv_Contracts&Form=Financial_Offers");
        DataSource_Customers = await httpClient.GetJsonAsync<List<string>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select Title From Def_Accounts_api where Type='عميل'&Required_Field=Title");
    }
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //User_Name = Permissions.UserName;
        //FullName = Permissions.Full_Name;
        //User_Job = Permissions.Job;

        /////////////////////////////////////////
        //-- Get User Data
        var user = (await AuthStat).User;
        User_Name = user.Identity.Name;
        FullName = user.Identity.Name;
        User_Job = user.Identity.Name;
        /////////////////////////////////////////

        Max_Account_ID = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetMaxId?QueryString=select max(ID) from Def_Accounts_api where ParentAccount = 'المستخلصات'");
        Max_Account_ID = Max_Account_ID.Replace("\"", "");
        Max_Acc= (Convert.ToInt32(Max_Account_ID))+1;

        //await jsRuntime.InvokeAsync<string>("console.log", "ProductName >> " + Max_Acc);

        MyContracts = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadColumn?QueryString=select * From Inv_Contracts &Required_Field=Financial_Offer_hardCopyCode");

        // print
        Url_Parm_Offer = Configuration.GetValue<string>("Reports") + "/Print/Reports_Sales_Offers_Financial_Form.aspx" + "?The_Footer=" + User_Name + "&Signature=" + User_Name + "&HardCopyCode=" + RowId_FinancialOffer;
    }

    //استايل البوب أب
    private object DialogParams = new
    {
@@params = new DialogModel { MinHeight = "700px", Width = "450px", EnableResize = true, }
    };

//  عمليات علي العروض المالية
public async void ActionBegin_FinancialOffers(ActionEventArgs<VM_Inv_Pre_Sales_Financial_Offer> args)
{
    if (args.RequestType.ToString() == "Delete")
    {
        // (Delete) Post Api
    }
    else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
    {
        if (args.Action == "add")
        {
            // (Add) Post Api
        }
        else
        {
            // (Edit) Put Api btn_Archive

            vM_Inv_Pre_Sales_Financial_Offer_1.ID = args.Data.ID;
            vM_Inv_Pre_Sales_Financial_Offer_1.HardCopyCode = args.Data.HardCopyCode;
            vM_Inv_Pre_Sales_Financial_Offer_1.Technical_Offer_HardCopyCode = args.Data.Technical_Offer_HardCopyCode;
            vM_Inv_Pre_Sales_Financial_Offer_1.Customer = args.Data.Customer;
            vM_Inv_Pre_Sales_Financial_Offer_1.Technical_Offer_Total = args.Data.Technical_Offer_Total;
            vM_Inv_Pre_Sales_Financial_Offer_1.Garantee_Included = args.Data.Garantee_Included;
            vM_Inv_Pre_Sales_Financial_Offer_1.Garantee_Cost = args.Data.Garantee_Cost;
            vM_Inv_Pre_Sales_Financial_Offer_1.Garantee_Month = args.Data.Garantee_Month;
            vM_Inv_Pre_Sales_Financial_Offer_1.Maintenance_Visits_Included = args.Data.Maintenance_Visits_Included;
            vM_Inv_Pre_Sales_Financial_Offer_1.Maintenance_Visits_Cost = args.Data.Maintenance_Visits_Cost;
            vM_Inv_Pre_Sales_Financial_Offer_1.Maintenance_Visits_Month = args.Data.Maintenance_Visits_Month;
            vM_Inv_Pre_Sales_Financial_Offer_1.Shipping_Charges = args.Data.Shipping_Charges;
            vM_Inv_Pre_Sales_Financial_Offer_1.Lefting_Charges = args.Data.Lefting_Charges;
            vM_Inv_Pre_Sales_Financial_Offer_1.Transportation_Charges = args.Data.Transportation_Charges;
            vM_Inv_Pre_Sales_Financial_Offer_1.Preparation_Charges = args.Data.Preparation_Charges;
            vM_Inv_Pre_Sales_Financial_Offer_1.Subcontractor_Cost = args.Data.Subcontractor_Cost;
            vM_Inv_Pre_Sales_Financial_Offer_1.Subcontractor_Statement = args.Data.Subcontractor_Statement;
            vM_Inv_Pre_Sales_Financial_Offer_1.Other_Charges = args.Data.Other_Charges;
            vM_Inv_Pre_Sales_Financial_Offer_1.Other_Charges_Statement = args.Data.Other_Charges_Statement;
            vM_Inv_Pre_Sales_Financial_Offer_1.Extra_Cost = args.Data.Extra_Cost;
            vM_Inv_Pre_Sales_Financial_Offer_1.Profit_Value = args.Data.Profit_Value;
            vM_Inv_Pre_Sales_Financial_Offer_1.Contract_Total = args.Data.Contract_Total;
            vM_Inv_Pre_Sales_Financial_Offer_1.Total_Cost = args.Data.Total_Cost;
            vM_Inv_Pre_Sales_Financial_Offer_1.Valid_To = args.Data.Valid_To;
            vM_Inv_Pre_Sales_Financial_Offer_1.Notes = args.Data.Notes;
            vM_Inv_Pre_Sales_Financial_Offer_1.LegalTerms_Items = args.Data.LegalTerms_Items;
            vM_Inv_Pre_Sales_Financial_Offer_1.Issuied_By = args.Data.Issuied_By;
            vM_Inv_Pre_Sales_Financial_Offer_1.Issuied_At = args.Data.Issuied_At;
            vM_Inv_Pre_Sales_Financial_Offer_1.Approved_By = args.Data.Approved_By;
            vM_Inv_Pre_Sales_Financial_Offer_1.Approved_At = args.Data.Approved_At;

            await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Financial_Offer?id=" + args.Data.ID.ToString(), vM_Inv_Pre_Sales_Financial_Offer_1);
            await this.Toast_Success.Show();
            return;
        }
    }
}

//  عمليات علي الدفعات والاقساط
public async void ActionBegin_Payments(ActionEventArgs<VM_Inv_Pre_Sales_Financial_Offer_Payments> args)
{
    if (args.RequestType.ToString() == "Delete")
    {
        // (Delete) Post Api
        await httpClient.DeleteAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Financial_Offer_Payments/" + args.Data.ID);
        await this.Toast_Success.Show();
        return;
    }
    else if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
    {
        if (args.Action == "add")
        {
            // (Add) Post Api

            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Financial_Offer_HardCopyCode = RowId_FinancialOffer.ToString();
            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Statment = args.Data.Statment;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Value = args.Data.Value;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Required_Date = args.Data.Required_Date;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Done_Date = DateTime.Now;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_1.Customer = Customer_Name;
            await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Financial_Offer_Payments", vM_Inv_Pre_Sales_Financial_Offer_Payments_1);
            await this.Toast_Success.Show();
            return;
        }
        else
        {
            // (Edit) Put Api btn_Archive

            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.ID = args.Data.ID;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Financial_Offer_HardCopyCode = args.Data.Financial_Offer_HardCopyCode;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Statment = args.Data.Statment;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Value = args.Data.Value;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Required_Date = args.Data.Required_Date;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Done_Date = DateTime.Now;
            vM_Inv_Pre_Sales_Financial_Offer_Payments_2.Customer = Customer_Name;

            await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Financial_Offer_Payments?id=" + args.Data.ID.ToString(), vM_Inv_Pre_Sales_Financial_Offer_Payments_2);
            await this.Toast_Success.Show();
            return;
        }
    }
}

// تحديد صف العروض
public async void RowSelect_TechnicalOffers(RowSelectEventArgs<VM_Inv_Pre_Sales_Financial_Offer> Args)
{
    RowId_FinancialOffer = Args.Data.HardCopyCode;
    Technical_HardCopyCode = Args.Data.Technical_Offer_HardCopyCode;
    Customer_Name = Args.Data.Customer;
    Row_Approved_By = Args.Data.Approved_By;
    ContractCost = Args.Data.Contract_Total;
    ElevatorCost = Args.Data.Total_Cost;
    Garantee_Included = Args.Data.Garantee_Included;
    Maintenance_Included = Args.Data.Maintenance_Visits_Included;
    Maintenance_Month = Args.Data.Maintenance_Visits_Month;
    Garantee_Month = Args.Data.Garantee_Month;

    ContractVat = Args.Data.Vat;
    Extra_Cost = Args.Data.Extra_Cost;
    Compnents_Cost = Args.Data.Technical_Offer_Total;
    Profit = Args.Data.Profit_Value;


    ContractNote = Args.Data.Notes;

    ProductName = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ReadField?QueryString=select * From Inv_Pre_Sales_Techical_Offer where HardCopyCode = '" + Args.Data.Technical_Offer_HardCopyCode + "'  &Required_Field=ELevator_Title");
    ProductName = ProductName.Replace("\"", "");

    this.DataSource_grdPayments = await httpClient.GetJsonAsync<List<VM_Inv_Pre_Sales_Financial_Offer_Payments>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadTable?QueryString=select * From Inv_Pre_Sales_Financial_Offer_Payments Where Financial_Offer_HardCopyCode = '" + RowId_FinancialOffer + "'");
    StateHasChanged();
}

// ألوان الشبكة
public void CellColor_FinancialOffers(QueryCellInfoEventArgs<VM_Inv_Pre_Sales_Financial_Offer> args)
{
    if (!string.IsNullOrEmpty(args.Data.Approved_By))
    {
        args.Cell.AddStyle(LightGreen);
    }
}

// زر طباعة العرض
public async void Print_Offer()
{
    if (RowId_FinancialOffer == 0)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    else
    {
        await jsRuntime.InvokeAsync<object>("open", new TimeSpan(1,1,1), Url_Parm_Offer, "_blank");

    }
}

// زر اعتماد العرض
protected async void btn_Success_Approval()
{

    if (RowId_FinancialOffer == 0)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    else if (string.IsNullOrWhiteSpace(Row_Approved_By) != true)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    else
    {
        QueryString = "Update Inv_Pre_Sales_Financial_Offer set Approved_By = '" + User_Name + "' , Approved_At = '" + DateTime.Now.ToString("dd-MM-yyyy") + "' where HardCopyCode = '" + RowId_FinancialOffer + "'";

        await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Services/UpdateField?QueryString=" + QueryString, vM_Inv_Pre_Sales_Financial_Offer_1);
        await this.Toast_Success.Show();
    }
    RowId_FinancialOffer = 0;
    await OnInitializedAsync();
    StateHasChanged();
}

// زر التعاقد
protected async void btn_Contracting()
{
    // Prevent Adding Because This Element is repeat
    if (MyContracts.IndexOf(RowId_FinancialOffer.ToString()) != -1)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["AlradyContracted"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    if (RowId_FinancialOffer == 0)
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    else if (string.IsNullOrWhiteSpace(Row_Approved_By))
    {
        this.Toast_Custom_Failed.Content = languageContainer.Keys["NotApproved"];
        await this.Toast_Custom_Failed.Show();
        return;
    }
    else
    {
        ref_btn_Contracting.Disabled = true;

        //-------------------  حفظ البيانات في جدول التعاقد -----------------------
        vM_Inv_Contracts.HardCopyCode = int.Parse(Get_Contract_HardCopyCode);
        vM_Inv_Contracts.Contract_Signed_By = User_Name;
        vM_Inv_Contracts.Contract_Signed_At = DateTime.Now;
        vM_Inv_Contracts.Contract_Signed_Job = User_Job;
        vM_Inv_Contracts.Technical_Offer_hardCopyCode = Technical_HardCopyCode;
        vM_Inv_Contracts.Financial_Offer_hardCopyCode = RowId_FinancialOffer.ToString();
        vM_Inv_Contracts.Customer = Customer_Name;
        vM_Inv_Contracts.Total_Cost = ContractCost;

        vM_Inv_Contracts.Profit = Profit;
        vM_Inv_Contracts.Vat = ContractVat;
        vM_Inv_Contracts.Component_Cost = Compnents_Cost;
        vM_Inv_Contracts.Other_Cost = Extra_Cost;

        vM_Inv_Contracts.DeliveryStart_At = DateTime.Now;
        vM_Inv_Contracts.Garantee_Included = Garantee_Included;
        vM_Inv_Contracts.Garantee_End = DateTime.Now.AddMonths(Garantee_Month.Value);
        vM_Inv_Contracts.Maintenance_Visits_Included = Maintenance_Included;
        vM_Inv_Contracts.Maintenance_Visits_End = DateTime.Now.AddMonths(Maintenance_Month.Value);


        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Contracts", vM_Inv_Contracts);
        await OnInitializedAsync();
        StateHasChanged();
        //--------------------------------------------------------------------------------

        //-------------------  عمل قيد چي إل قيمة التعاقد -----------------------
        string Contract_Code = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/GetMaxId?QueryString=select max(HardCopyCode) from Inv_Contracts");
        Contract_Code = Contract_Code.Replace("\"", "");



        vM_Inv_GL.Type = "تعاقد";
        vM_Inv_GL.The_User = User_Name;
        vM_Inv_GL.Contract_Type = "تركيبات";
        vM_Inv_GL.Contract_Code = Contract_Code;
        vM_Inv_GL.Apporoved_By = User_Name;
        vM_Inv_GL.Approved_At = TimeSatmp;
        vM_Inv_GL.HardCopyCode = int.Parse(Contract_Code);
        vM_Inv_GL.Document_ID = RowId_FinancialOffer.ToString();
        vM_Inv_GL.ProccessID = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ProccessID");
        vM_Inv_GL.The_Date = TimeSatmp;
        vM_Inv_GL.DebitAccount = Customer_Name;
        vM_Inv_GL.CreditAccount = "مخزن التسليم";
        vM_Inv_GL.Item = "مستخلص عقد"+"_"+Contract_Code+"_"+ProductName;
        //vM_Inv_GL.Quantity = 1;
        //vM_Inv_GL.Unit_Price = ElevatorCost;
        vM_Inv_GL.Auto_Statement = "عملية تعاقد رقم '" + Contract_Code + "' بناءاً علي العرض المالي رقم '" + RowId_FinancialOffer + "'   خاصة العميل '" + Customer_Name ;
        vM_Inv_GL.Notes = ContractNote;
        vM_Inv_GL.Value = ElevatorCost;
        vM_Inv_GL.Currency = "ريال سعودي";
        // api Post (Insert)
        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Inv_GL_api", vM_Inv_GL);
        //--------------------------------------------------------------------------------

        //-------------------  عمل قيد چي إل ضرائب التعاقد -----------------------

        vM_Inv_GL2.Type = "ضرائب";
        vM_Inv_GL2.The_User = User_Name;
        vM_Inv_GL2.Contract_Type = "تركيبات";
        vM_Inv_GL2.Contract_Code = Contract_Code;
        vM_Inv_GL2.Apporoved_By = User_Name;
        vM_Inv_GL2.Approved_At = TimeSatmp;
        vM_Inv_GL2.HardCopyCode = int.Parse(Contract_Code);
        vM_Inv_GL2.Document_ID = RowId_FinancialOffer.ToString();
        vM_Inv_GL2.ProccessID = await httpClient.GetStringAsync(Configuration.GetValue<string>("Api") + "/api/Services/ProccessID");
        vM_Inv_GL2.The_Date = TimeSatmp;
        vM_Inv_GL2.DebitAccount = Customer_Name;
        vM_Inv_GL2.CreditAccount = "ضريبة القيمة المضافة";
        vM_Inv_GL2.Item = "مستخلص عقد"+"_"+Contract_Code+"_"+ProductName;
        //vM_Inv_GL2.Quantity = 1;
        //vM_Inv_GL2.Unit_Price = ContractVat;
        vM_Inv_GL2.Auto_Statement = "عملية تسجيل ضريبة القيمة المضافة للتعاقد رقم '" + Contract_Code + "' بناءاً على العرض المالي رقم '" + RowId_FinancialOffer + "'   خاصة العميل '" + Customer_Name + "'";
        vM_Inv_GL2.Notes = ContractNote;
        vM_Inv_GL2.Value = ContractVat;
        vM_Inv_GL2.Currency = "ريال سعودي";
        // api Post (Insert)
        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Inv_GL_api", vM_Inv_GL2);
        //--------------------------------------------------------------------------------

        //-------------------  إضافة اسم المصعد للأصناف -----------------------

        VM_Def_Items_Object.Item_Title_Ar = "مستخلص عقد"+"_"+Contract_Code+"_"+ProductName;
        VM_Def_Items_Object.Item_Title_En = "مستخلص عقد"+"_"+Contract_Code+"_"+ProductName;
        VM_Def_Items_Object.Item_Group = "منتجات التسليم";
        VM_Def_Items_Object.Item_Unit = "بالعدد";
        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Items_api", VM_Def_Items_Object);
        //-----------------------------------------------------------
        //-------------------  إضافة مستخلص -----------------------

        vM_Def_Accounts.ID = Max_Acc;
        vM_Def_Accounts.Title = "مستخلص عقد"+"_"+Contract_Code+"_"+ProductName ;
        vM_Def_Accounts.ParentID = 123;
        vM_Def_Accounts.Type = "مستخلص";
        vM_Def_Accounts.ParentAccount = "المستخلصات";
        vM_Def_Accounts.CurrencyID = "ريال سعودي";

        await httpClient.PostJsonAsync(Configuration.GetValue<string>("Api") + "/api/Accounts_api", vM_Def_Accounts);

        //-----------------------------------------------------------

        await this.Toast_Success.Show();

    }
}

}