@page "/Contracts"
@layout MainLayout_Contracting

@using AjaTech_Blazor.Data.ViewModels;
@using Microsoft.Extensions.Configuration;

@inject HttpClient httpClient
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@*@inject Blazored.SessionStorage.ISessionStorageService sessionStorage*@
@*--------------------------------------------------------------------------------------------------------------------------*@

<div class="container card-container">
    <div class="row">
        @*========================================= Page Content    ========================================================*@

        @*---------------------------------------------- شبكة التعاقدات    -----------------------------------------------*@

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["TheContracting"]</div>
                    <SfGrid AllowSelection="true" EnableRtl="true" DataSource="DataSource_Contracts" AllowResizing="true" Width="100%" AllowPaging="true" Toolbar="@(new string[] { "Search" })">
                        <GridEvents RowSelected="RowSelect_Contract" TValue="VM_Inv_Contracts"></GridEvents>
                        @*<GridEditSettings AllowAdding="true" AllowEditOnDblClick="true" ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowEditing="true" AllowDeleting="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog" Dialog="DialogParams"></GridEditSettings>*@
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" DefaultValue="1" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.HardCopyCode) AllowEditing="false" HeaderText="@languageContainer.Keys["ContractCode"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Financial_Offer_hardCopyCode) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["FinancialOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Technical_Offer_hardCopyCode) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["TechnicalOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Customer) HeaderText="@languageContainer.Keys["Customer_Name"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Total_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Total_Contracting"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Contract_Signed_By) AllowEditing="false" HeaderText="@languageContainer.Keys["Contracting_By"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Contract_Signed_At) EditType="EditType.DatePickerEdit" Format="dd/MM/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["DoneDate"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Contract_Signed_Job) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Contracting_Job"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Garantee_Included) DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" HeaderText="@languageContainer.Keys["GranteeIncluded"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Garantee_End) EditType="EditType.DatePickerEdit" Format="dd/MM/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["Garantee_End"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Maintenance_Visits_Included) DisplayAsCheckBox="true" EditType="EditType.BooleanEdit" HeaderText="@languageContainer.Keys["Maintanance_Visit_Includedncluded"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Contracts.Maintenance_Visits_End) EditType="EditType.DatePickerEdit" Format="dd/MM/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["Maintanance_End"]" TextAlign="TextAlign.Center"></GridColumn>

                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        @*--------------------------------------------------  Buttons  -----------------------------------------------------*@
        <div class="col-lg-12 control-section form-group m-3">
            <div class="row">

                <div class="col-lg-4"></div>
                @* زر طباعة العرض *@
                <SfButton OnClick="btn_Print" CssClass="col-lg-4 e-btn font-weight-bold e-normal e-primary" IconCss="e-icons e-print-icon">. @languageContainer.Keys["Print"]</SfButton>
                <div class="col-lg-4"></div>

            </div>
        </div>

        @*------------------------------------------------------------------------------------------------------------------*@
    </div>
</div>

@*--------------------------------------------------------------------------------------------------------------------------*@
@*========================================= Toast Custom   Code ============================================================*@
<SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed"
         TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger"
         Title="@languageContainer.Keys["Toast_Title_Failed"]"
         Content="@ToastContent">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
@*========================================= / Toast Custom   Code ==========================================================*@

@*========================================= / Toast  Success ===============================================================*@

<SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success"
         Icon="e-success toast-icons"
         Title="@languageContainer.Keys["Toast_Title_Success"]"
         Content="@languageContainer.Keys["Toast_Content_Success"]">
    <ToastPosition X="Right" Y="Bottom"></ToastPosition>
</SfToast>
@*========================================= / Toast  Success ===============================================================*@


@*-------------------------------------------------  Code  -----------------------------------------------------------------*@
@*--------------------------------------------------------------------------------------------------------------------------*@

@code {

    // المتغيرات
    #region
    SfToast Toast_Success, Toast_Custom_Failed;
    string ToastContent, User_Name, FullName, Url_Contract, Technical_Offer_hardCopyCode, Financial_Offer_hardCopyCode;
    int? RowId_Contract = 0;

    List<VM_Inv_Contracts> DataSource_Contracts = new List<VM_Inv_Contracts>();
    //Permissions Permissions_Obj = new Permissions();

    #endregion

    //تهيئة الصفحة
    protected override async Task OnInitializedAsync()
    {
        DataSource_Contracts = await httpClient.GetJsonAsync<List<VM_Inv_Contracts>>(Configuration.GetValue<string>("Api") + "/api/Contracts");
    }
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions_Obj = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //User_Name = Permissions_Obj.UserName;
        //FullName = Permissions_Obj.Full_Name;
        /////////////////////////////////////////
        //--- Get User Data
        var user = (await AuthStat).User;
        User_Name = user.Identity.Name;
        FullName = user.Identity.Name;
        /////////////////////////////////////////

        //Print
        Url_Contract = Configuration.GetValue<string>("Reports") + "/Print/Reports_Contract_Form.aspx" + "?The_Footer=" + FullName + "&Signature=" + User_Name + "&HardCopyCode=" + RowId_Contract + "&Technical_Offer_hardCopyCode=" + Technical_Offer_hardCopyCode + "&Financial_Offer_hardCopyCode=" + Financial_Offer_hardCopyCode;

    }

    // تحديد صف العقد
    public async void RowSelect_Contract(RowSelectEventArgs<VM_Inv_Contracts> Args)
    {
        RowId_Contract = Args.Data.HardCopyCode;
        Technical_Offer_hardCopyCode = Args.Data.Technical_Offer_hardCopyCode;
        Financial_Offer_hardCopyCode = Args.Data.Financial_Offer_hardCopyCode;

        //await jsRuntime.InvokeAsync<string>("console.log", "Financial_Offer_hardCopyCode#### >> " + Financial_Offer_hardCopyCode);

        StateHasChanged();
    }

    // زر الطباعة 
    public async void btn_Print()
    {
        if (RowId_Contract.Value == 0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
        else
        {
            await jsRuntime.InvokeAsync<object>("open", new TimeSpan(1,1,1), Url_Contract, "_blank");
        }
    }

}
