@page "/EditApproval_TechnicalOffer"
@layout MainLayout_Contracting

@using AjaTech_Blazor.Data.ViewModels;
@using System.Diagnostics;
@using Microsoft.Extensions.Configuration;

@inject HttpClient httpClient;
@inject NavigationManager UriHelper
@inject IJSRuntime jsRuntime
@inject IConfiguration Configuration
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@*---------------------------------------------------------------------------------------------------------------------------*@
@*--------------------------------------------------  Page Container --------------------------------------------------*@
<div class="container card-container">
    <div class="row">

        @*---------------------------------------------------------------------------------------------------------------------------*@
        @*--------------------------------------------------  Page Header --------------------------------------------------*@
        <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#868218;color:white;margin-top:20px;font-size:x-large;border-radius:5px">@languageContainer.Keys["EditApproval_TechnicalOffer"]</div>

        @*---------------------------------------------------------------------------------------------------------------------------*@
        @*=========================================  Content Page   ========================================================*@

        @*---------------------------------------------- شبكة العروض الفنية    ----------------------------------- -----------------*@

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:gray 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["TechnicalOffers"]</div>
                    <SfGrid @ref="grdTechnicalOffers" AllowSelection="true"
                            EnableRtl="true" DataSource="DataSource_TechnicalOffers"
                            AllowResizing="true" Width="100%" AllowPaging="true"
                            Toolbar="@(new string[] { "Search", "Edit" , "Delete" })">
                        <GridEvents RowSelected="RowSelect_TechnicalOffers"
                                    OnActionBegin="ActionBegin_TechnicalOffers"
                                    QueryCellInfo="CellColor_TechnicalOffers"
                                    TValue="VM_Inv_Pre_Sales_Techical_Offer"></GridEvents>
                        <GridEditSettings AllowAdding="true" AllowEditOnDblClick="true"
                                          ShowDeleteConfirmDialog="true" ShowConfirmDialog="true" AllowEditing="true" AllowDeleting="true" Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog"></GridEditSettings>
                        <GridSelectionSettings Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></GridSelectionSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" DefaultValue="1" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.HardCopyCode) AllowEditing="false" HeaderText="@languageContainer.Keys["TechnicalOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Items_Count) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Items_Count"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Total_Items_Cost) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["TechnicalOffer_Total"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.ELevator_Title) HeaderText="@languageContainer.Keys["ELevator_Title"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Machine_Type) HeaderText="@languageContainer.Keys["Elevator_Type"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Path_Length) ValidationRules="@(new {number = true })" HeaderText="@languageContainer.Keys["ElvTrack"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Exterior_Entrance_Count) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["OutGatesCount"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Wires_Count) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["WiresCount"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Suspension_Type) HeaderText="@languageContainer.Keys["SuspensionType"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Box_Entrance_Count) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["CabinGatesCount"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.DoorType) HeaderText="@languageContainer.Keys["DoorType"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Door_Sensor) HeaderText="@languageContainer.Keys["SensorType"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Emergency_Circuit) HeaderText="@languageContainer.Keys["EmergencyCircle"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Levels) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["StoreyCount"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Persons) ValidationRules="@(new { number = true })" HeaderText="@languageContainer.Keys["Persons"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Contract_Items) HeaderText="@languageContainer.Keys["DescriptionItems_InContract"]" TextAlign="TextAlign.Center">
                                <EditTemplate>
                                    <SfTextBox Multiline="true" EnableRtl="true" ShowClearButton="true" ID="Contract_Items" FloatLabelType="FloatLabelType.Always" Placeholder="@languageContainer.Keys["DescriptionItems_InContract"]"  CssClass="grid-font"
                                               Value="@((context as VM_Inv_Pre_Sales_Techical_Offer).Contract_Items)" />
                                </EditTemplate>
                            </GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Notes) HeaderText="@languageContainer.Keys["Notes"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Issuied_By) AllowEditing="false" HeaderText="@languageContainer.Keys["Issuance_By"]" TextAlign="TextAlign.Center" Width="110"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Approved_By) AllowEditing="false" HeaderText="@languageContainer.Keys["Approval"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer.Approved_At) AllowEditing="false" EditType="EditType.DatePickerEdit" Format="d/M/yyyy" Type="ColumnType.Date" HeaderText="@languageContainer.Keys["Approval_Date"]" TextAlign="TextAlign.Center" Width="120"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        @*--------------------------------------------------  Buttons  ---------------------------------------------------*@
        <div class="col-lg-12 control-section form-group m-3">
            <div class="row">
                <div class="col-lg-2"></div>
                @* زر طباعة العرض *@
                <SfButton @onclick="@Print_Offer" CssClass="col-lg-3 e-btn font-weight-bold e-normal e-primary" IconCss="e-icons e-print-icon">. @languageContainer.Keys["Print"]</SfButton>
                <div class="col-lg-2"></div>
                @* زر اعتماد العرض *@
                <SfButton @onclick="btn_Success_Approval" CssClass="col-lg-3 e-btn e-normal e-success form-control font-weight-bold" type="button">@languageContainer.Keys["Approval"]</SfButton>
                <div class="col-lg-2"></div>

            </div>
        </div>

        @*-----------------------------------------------------------------------------------------------------*@
        @*-------------------------------------------------- شبكة تفاصيل العروض الفنية --------------------------------- -----------------*@

        <div class="col-lg-12 control-section">
            <div class="content-wrapper">
                <div class="row">
                    <div class="col-lg-12 text-center font-weight-bold" style="border:#808080 1px solid;background-color:#1b809e;margin-top:20px;font-size:x-large;border-radius:5px;color:white">@languageContainer.Keys["TechnicalOfferDetails"]</div>
                    <SfGrid @ref="grdTechnicalOffer_Details" EnableRtl="true" DataSource="DataSource_TechnicalOffer_Details"
                            Width="100%" AllowPaging="true" AllowSelection="true" AllowResizing="true"
                            Toolbar="@(new string[] { "Search","Edit" , "Delete" })">
                        <GridEvents OnActionBegin="ActionBegin_TechnicalOfferDetails" TValue="VM_Inv_Pre_Sales_Techical_Offer_Details"></GridEvents>
                        <GridEditSettings ShowDeleteConfirmDialog="true"
                                          ShowConfirmDialog="true"
                                          AllowDeleting="true"
                                          AllowEditing="true"
                                          AllowAdding="true"
                                          AllowEditOnDblClick="true"
                                          Mode="@Syncfusion.Blazor.Grids.EditMode.Dialog"></GridEditSettings>
                        <GridSelectionSettings PersistSelection="true" Mode="Syncfusion.Blazor.Grids.SelectionMode.Row"></GridSelectionSettings>
                        <GridColumns>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.ID) Visible="false" IsPrimaryKey="true" IsIdentity="true" DefaultValue="1" HeaderText="@languageContainer.Keys["ID"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.HardCopyCode) AllowEditing="false" HeaderText="@languageContainer.Keys["TechnicalOffer_Code"]" TextAlign="TextAlign.Center"></GridColumn>
                            @*<GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.The_Group) AllowEditing="false" HeaderText="@languageContainer.Keys["The_Group"]" TextAlign="TextAlign.Center"></GridColumn>*@
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Item) HeaderText="@languageContainer.Keys["Item"]" TextAlign="TextAlign.Center">
                                <EditTemplate>
                                    <SfDropDownList ShowClearButton="true" FloatLabelType="@FloatLabelType.Always" AllowFiltering="true" ID="Item" Placeholder="@languageContainer.Keys["Item"]" Value="@((context as VM_Inv_Pre_Sales_Techical_Offer_Details).Item)" DataSource="@DataSource_Items">
                                        <DropDownListFieldSettings Text="Item_Title_Ar" Value="Item_Title_Ar"></DropDownListFieldSettings>
                                    </SfDropDownList>
                                </EditTemplate>
                            </GridColumn>
                            @*<GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Code) AllowEditing="false" HeaderText="@languageContainer.Keys["Item_Code"]" TextAlign="TextAlign.Center"></GridColumn>*@
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Description) Visible="false" HeaderText="@languageContainer.Keys["Description"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Current_Balance) AllowEditing="false" HeaderText="@languageContainer.Keys["Balance"]" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Count) HeaderText="@languageContainer.Keys["Quantity"]" ValidationRules="@(new { number = true })" TextAlign="TextAlign.Center"></GridColumn>
                            <GridColumn Field=@nameof(VM_Inv_Pre_Sales_Techical_Offer_Details.Notes) HeaderText="@languageContainer.Keys["Notes"]" TextAlign="TextAlign.Center"></GridColumn>
                        </GridColumns>
                    </SfGrid>
                </div>
            </div>
        </div>

        @*-----------------------------------------------------------------------------------------------------*@
        @*========================================= / Content Page   ========================================================*@

        @*========================================= Toast Custom   Code ============================================================*@
        <SfToast ID="Failed_Id_Custom" @ref="Toast_Custom_Failed"
                 TimeOut="5000" Icon="e-error toast-icons" CssClass="e-toast-danger"
                 Title="@languageContainer.Keys["Toast_Title_Failed"]"
                 Content="@ToastContent">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*========================================= / Toast Custom   Code =============================================================*@

        @*========================================= / Toast  Success =================================================================*@

        <SfToast ID="Success_Id" @ref="Toast_Success" TimeOut="4000" CssClass="e-toast-success"
                 Icon="e-success toast-icons"
                 Title="@languageContainer.Keys["Toast_Title_Success"]"
                 Content="@languageContainer.Keys["Toast_Content_Success"]">
            <ToastPosition X="Right" Y="Bottom"></ToastPosition>
        </SfToast>
        @*========================================= / Toast  Success ==================================================================*@

    </div>
</div>

@*-----------------------------------------------------------------------------------------------------*@
@*--------------------------------------------  Code --------------------------------------------------*@
@*-----------------------------------------------------------------------------------------------------*@

@code{
    //المتغيرات
    #region Global Variables
    string tmpoo;
    //Permissions Permissions_Obj = new Permissions();
    [CascadingParameter] protected Task<AuthenticationState> AuthStat { get; set; }

    string User_Name;
    string QueryString;
    int counter = 0;
    long? RowId_TechnicalOffer;
    string Row_Approved_By_TechnicalOffer;
    string Url_Parm_Offer;
    string ToastContent;
    string[] LightGreen = { "color: #0b7924f0;font-weight:Bold" };
    string[] Pink = { "color: #dc3545ee;font-weight:Bold" };
    SfGrid<VM_Inv_Pre_Sales_Techical_Offer> grdTechnicalOffers;
    SfGrid<VM_Inv_Pre_Sales_Techical_Offer_Details> grdTechnicalOffer_Details;
    SfToast Toast_Success, Toast_Custom_Failed;
    VM_Inv_Pre_Sales_Techical_Offer_Details vM_Inv_Pre_Sales_Techical_Offer_Details = new VM_Inv_Pre_Sales_Techical_Offer_Details();
    VM_Inv_Pre_Sales_Techical_Offer vM_Inv_Pre_Sales_Techical_Offer = new VM_Inv_Pre_Sales_Techical_Offer();
    List<VM_Inv_Pre_Sales_Techical_Offer> DataSource_TechnicalOffers = new List<VM_Inv_Pre_Sales_Techical_Offer>();
    List<VM_Inv_Pre_Sales_Techical_Offer_Details> DataSource_TechnicalOffer_Details = new List<VM_Inv_Pre_Sales_Techical_Offer_Details>();
    private List<VM_Def_Items> DataSource_Items = new List<VM_Def_Items>();

    #endregion

    //تهيئة الصفحة
    protected override async Task OnInitializedAsync()
    {
        DataSource_TechnicalOffers = await httpClient.GetJsonAsync<List<VM_Inv_Pre_Sales_Techical_Offer>>(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Techical_Offer");
        DataSource_Items = await httpClient.GetJsonAsync<List<VM_Def_Items>>(Configuration.GetValue<string>("Api") + "/api/Items_api");
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //Permissions_Obj = await sessionStorage.GetItemAsync<Permissions>("Permissions");
        //User_Name = Permissions_Obj.UserName;
        /////////////////////////////////////////
        var user = (await AuthStat).User;
        User_Name = user.Identity.Name;
        /////////////////////////////////////////
        // print
        Url_Parm_Offer = Configuration.GetValue<string>("Reports") + "/Print/Reports_Sales_Offers_Technical.aspx" + "?The_Footer=" + User_Name + "&Signature=" + User_Name + "&HardCopyCode=" + RowId_TechnicalOffer;

    }

    //ألوان الشبكة
    public void CellColor_TechnicalOffers(QueryCellInfoEventArgs<VM_Inv_Pre_Sales_Techical_Offer> args)
    {
        if (!string.IsNullOrEmpty(args.Data.Approved_By))
        {
            args.Cell.AddStyle(LightGreen);
        }
    }

    // عمليات علي شبكة  العروض
    public async void ActionBegin_TechnicalOffers(ActionEventArgs<VM_Inv_Pre_Sales_Techical_Offer> args)
    {
        Debug.WriteLine(DateTime.Now.ToString());
        try
        {

            if (args.RequestType.ToString() == "Delete")
            {
                if (!string.IsNullOrEmpty(args.Data.Approved_By))
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                await httpClient.DeleteAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Techical_Offer/" + args.Data.ID);
                QueryString = "Delete From [Inv_Pre_Sales_Techical_Offer_Details] Where [HardCopyCode]='" + args.Data.HardCopyCode + "'";
                await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Services/UpdateField?QueryString=" + QueryString, vM_Inv_Pre_Sales_Techical_Offer_Details);
                await this.Toast_Success.Show();
                return;
            }
            if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
            {
                if (!string.IsNullOrEmpty(args.Data.Approved_By))
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                vM_Inv_Pre_Sales_Techical_Offer.ID = args.Data.ID;
                vM_Inv_Pre_Sales_Techical_Offer.HardCopyCode = args.Data.HardCopyCode;
                vM_Inv_Pre_Sales_Techical_Offer.Items_Count = args.Data.Items_Count;
                vM_Inv_Pre_Sales_Techical_Offer.Total_Items_Cost = args.Data.Total_Items_Cost;
                vM_Inv_Pre_Sales_Techical_Offer.ELevator_Title = args.Data.ELevator_Title;
                vM_Inv_Pre_Sales_Techical_Offer.Emergency_Circuit = args.Data.Emergency_Circuit;
                vM_Inv_Pre_Sales_Techical_Offer.Box_Entrance_Count = args.Data.Box_Entrance_Count;
                vM_Inv_Pre_Sales_Techical_Offer.DoorType = args.Data.DoorType;
                vM_Inv_Pre_Sales_Techical_Offer.Door_Sensor = args.Data.Door_Sensor;
                vM_Inv_Pre_Sales_Techical_Offer.Exterior_Entrance_Count = args.Data.Exterior_Entrance_Count;
                vM_Inv_Pre_Sales_Techical_Offer.Levels = args.Data.Levels;
                vM_Inv_Pre_Sales_Techical_Offer.Machine_Type = args.Data.Machine_Type;
                vM_Inv_Pre_Sales_Techical_Offer.Notes = args.Data.Notes;
                vM_Inv_Pre_Sales_Techical_Offer.Path_Length = args.Data.Path_Length;
                vM_Inv_Pre_Sales_Techical_Offer.Persons = args.Data.Persons;
                vM_Inv_Pre_Sales_Techical_Offer.Contract_Items = args.Data.Contract_Items;
                vM_Inv_Pre_Sales_Techical_Offer.Suspension_Type = args.Data.Suspension_Type;
                vM_Inv_Pre_Sales_Techical_Offer.Units_Count = args.Data.Units_Count;
                vM_Inv_Pre_Sales_Techical_Offer.Valid_To = args.Data.Valid_To;
                vM_Inv_Pre_Sales_Techical_Offer.Wires_Count = args.Data.Wires_Count;
                vM_Inv_Pre_Sales_Techical_Offer.Modified_At = DateTime.Now.ToString("dd-MM-yyyy");
                vM_Inv_Pre_Sales_Techical_Offer.Issuied_By = User_Name;
                await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Techical_Offer?id=" + args.Data.ID.ToString(), vM_Inv_Pre_Sales_Techical_Offer);
                //update sales offer row
                QueryString = "Update Inv_Pre_Sales_Techical_Offer set Modified_By = '" + User_Name + "' , Modified_At = '" + DateTime.Now.ToString("dd-MM-yyyy") + "' where HardCopyCode = '" + vM_Inv_Pre_Sales_Techical_Offer.HardCopyCode + "'";
                await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Services/UpdateField?QueryString=" + QueryString, vM_Inv_Pre_Sales_Techical_Offer_Details);
                await this.Toast_Success.Show();
                return;
            }
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine(ex.Message);
        }
    }

    // عمليات علي شبكة تفاصيل العروض
    public async void ActionBegin_TechnicalOfferDetails(ActionEventArgs<VM_Inv_Pre_Sales_Techical_Offer_Details> args)
    {
        try
        {
            if (args.RequestType.ToString() == "Delete")
            {
                if (string.IsNullOrWhiteSpace(Row_Approved_By_TechnicalOffer) != true)
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"] + languageContainer.Keys["Because_It_Approved"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                if (grdTechnicalOffer_Details.TotalItemCount == 1)
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Delete_All_Grid_Items"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }
                // (Delete) Post Api
                await httpClient.DeleteAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Techical_Offer_Details/" + args.Data.ID);
                await this.Toast_Success.Show();
                return;
            }
            if (args.RequestType == Syncfusion.Blazor.Grids.Action.Save)
            {

                if (string.IsNullOrWhiteSpace(Row_Approved_By_TechnicalOffer) != true)
                {
                    this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"] + languageContainer.Keys["Because_It_Approved"];
                    await this.Toast_Custom_Failed.Show();
                    return;
                }

                vM_Inv_Pre_Sales_Techical_Offer_Details.HardCopyCode = args.Data.HardCopyCode;
                vM_Inv_Pre_Sales_Techical_Offer_Details.ID = args.Data.ID;
                vM_Inv_Pre_Sales_Techical_Offer_Details.Item = args.Data.Item;
                vM_Inv_Pre_Sales_Techical_Offer_Details.Notes = args.Data.Notes;
                vM_Inv_Pre_Sales_Techical_Offer_Details.The_Group = args.Data.The_Group;
                vM_Inv_Pre_Sales_Techical_Offer_Details.Code = args.Data.Code;
                vM_Inv_Pre_Sales_Techical_Offer_Details.Count = args.Data.Count;
                vM_Inv_Pre_Sales_Techical_Offer_Details.Description = args.Data.Description;
                //update sales offer details table
                await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Pre_Sales_Techical_Offer_Details?id=" + args.Data.ID.ToString(), vM_Inv_Pre_Sales_Techical_Offer_Details);
                //update sales offer row
                QueryString = "Update Inv_Pre_Sales_Techical_Offer set Modified_By = '" + User_Name + "' , Modified_At = '" + DateTime.Now.ToString("dd-MM-yyyy") + "' where HardCopyCode = '" + vM_Inv_Pre_Sales_Techical_Offer_Details.HardCopyCode + "'";
                await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Services/UpdateField?QueryString=" + QueryString, vM_Inv_Pre_Sales_Techical_Offer_Details);
                await this.Toast_Success.Show();
                return;
            }
        }
        catch (Exception ex)
        {
            System.Diagnostics.Debug.WriteLine(ex.Message);
        }
    }

    // زر اعتماد العرض
    protected async void btn_Success_Approval()
    {

        if (RowId_TechnicalOffer == 0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
        else if (string.IsNullOrWhiteSpace(Row_Approved_By_TechnicalOffer) != true)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Cant_Do_this_Operation"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
        else
        {
            QueryString = "Update Inv_Pre_Sales_Techical_Offer set Approved_By = '" + User_Name + "' , Approved_At = '" + DateTime.Now.ToString("dd-MM-yyyy") + "' where HardCopyCode = '" + RowId_TechnicalOffer + "'";
            await httpClient.PutJsonAsync(Configuration.GetValue<string>("Api") + "/api/Services/UpdateField?QueryString=" + QueryString, vM_Inv_Pre_Sales_Techical_Offer_Details);
            await this.Toast_Success.Show();
        }
        await OnInitializedAsync();

        StateHasChanged();
    }

    // زر ارشفة العرض
    protected async void btn_Archive()
    {
        if (RowId_TechnicalOffer == 0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
            await this.Toast_Custom_Failed.Show();
            return;
        }
        else
        {
            await this.Toast_Success.Show();
        }
        StateHasChanged();
    }

    // زر طباعة العرض
    public async void Print_Offer()
    {
        if (RowId_TechnicalOffer == 0)
        {
            this.Toast_Custom_Failed.Content = languageContainer.Keys["Toast_Failed_SelectRow"];
            await    this.Toast_Custom_Failed.Show();
            return;
        }
        else
        {
            //UriHelper.NavigateTo(Url_Parm_Offer);

            await jsRuntime.InvokeAsync<object>("open", new TimeSpan(1,1,1), Url_Parm_Offer, "_blank");

        }
    }

    // تحديد صف العرض
    public async void RowSelect_TechnicalOffers(RowSelectEventArgs<VM_Inv_Pre_Sales_Techical_Offer> Args)
    {
        RowId_TechnicalOffer = Args.Data.HardCopyCode;
        Row_Approved_By_TechnicalOffer = Args.Data.Approved_By;
        this.DataSource_TechnicalOffer_Details = await httpClient.GetJsonAsync<List<VM_Inv_Pre_Sales_Techical_Offer_Details>>(Configuration.GetValue<string>("Api") + "/api/Services/ReadTable?QueryString=select * From Inv_Pre_Sales_Techical_Offer_Details Where HardCopyCode = '" + RowId_TechnicalOffer + "'");
        StateHasChanged();
    }

}
